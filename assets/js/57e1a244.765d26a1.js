"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2322],{3905:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return m}});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},s=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),d=p(r),m=i,f=d["".concat(l,".").concat(m)]||d[m]||u[m]||o;return r?n.createElement(f,a(a({ref:t},s),{},{components:r})):n.createElement(f,a({ref:t},s))}));function m(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:i,a[1]=c;for(var p=2;p<o;p++)a[p]=r[p];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},5416:function(e,t,r){r.r(t),r.d(t,{assets:function(){return l},contentTitle:function(){return a},default:function(){return u},frontMatter:function(){return o},metadata:function(){return c},toc:function(){return p}});var n=r(3117),i=(r(7294),r(3905));const o={sidebar_label:"Compilation"},a="Compiling a Cairo 1 Project with Protostar",c={unversionedId:"cairo-1/interacting-with-starknet/compiling",id:"cairo-1/interacting-with-starknet/compiling",title:"Compiling a Cairo 1 Project with Protostar",description:"To build your contracts, first define them in protostar.toml",source:"@site/docs/cairo-1/06-interacting-with-starknet/09-compiling.md",sourceDirName:"cairo-1/06-interacting-with-starknet",slug:"/cairo-1/interacting-with-starknet/compiling",permalink:"/protostar/docs/cairo-1/interacting-with-starknet/compiling",draft:!1,editUrl:"https://github.com/software-mansion/protostar/tree/master/website/docs/cairo-1/06-interacting-with-starknet/09-compiling.md",tags:[],version:"current",sidebarPosition:9,frontMatter:{sidebar_label:"Compilation"},sidebar:"cairo1",previous:{title:"Scripting",permalink:"/protostar/docs/cairo-1/interacting-with-starknet/scripting"}},l={},p=[{value:"Output directory",id:"output-directory",level:2},{value:"Using external dependencies",id:"using-external-dependencies",level:2},{value:"Compiling a single contract",id:"compiling-a-single-contract",level:2}],s={toc:p};function u(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"compiling-a-cairo-1-project-with-protostar"},"Compiling a Cairo 1 Project with Protostar"),(0,i.kt)("p",null,"To build your contracts, first define them in ",(0,i.kt)("a",{parentName:"p",href:"/protostar/docs/cairo-1/protostar-toml#contracts-section"},(0,i.kt)("inlineCode",{parentName:"a"},"protostar.toml"))),(0,i.kt)("p",null,"To build run"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="build-cairo1"',title:'"build-cairo1"'},"protostar build-cairo1\n")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/protostar/docs/cli-reference#build-cairo1"},"Check CLI reference")," for more details."),(0,i.kt)("h2",{id:"output-directory"},"Output directory"),(0,i.kt)("p",null,"Running ",(0,i.kt)("a",{parentName:"p",href:"/protostar/docs/cli-reference#build-cairo1"},(0,i.kt)("inlineCode",{parentName:"a"},"protostar build-cairo1"))," command will generate the compiled contracts in\nthe ",(0,i.kt)("inlineCode",{parentName:"p"},"build")," directory by default.\nYou can specify a custom output directory using\nthe ",(0,i.kt)("a",{parentName:"p",href:"../../cli-reference#compiled-contracts-dir-pathbuild-1"},(0,i.kt)("inlineCode",{parentName:"a"},"--compiled-contracts-dir"))," argument."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="Example"',title:'"Example"'},"$ protostar build-cairo1 --compiled-contracts-dir out\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},".sierra.json")," files contain contracts compiled to the sierra format. This format is used to declare contracts on\nStarknet.\nRead more about\nsierra ",(0,i.kt)("a",{parentName:"p",href:"https://docs.starknet.io/documentation/architecture_and_concepts/Contracts/cairo-1-and-sierra"},"here"),"."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},".casm.json")," files contain contracts compiled to the casm format which can be executed on the cairo virtual machine. This\nformat is used to calculate ",(0,i.kt)("inlineCode",{parentName:"p"},"compiled_class_hash")," of a contract."),(0,i.kt)("h2",{id:"using-external-dependencies"},"Using external dependencies"),(0,i.kt)("p",null,"If your build requires using external dependencies, you can specify additional paths in the ",(0,i.kt)("inlineCode",{parentName:"p"},"build-cairo1")," command. To\ndo that, you need to use the ",(0,i.kt)("a",{parentName:"p",href:"/protostar/docs/cli-reference#linked-libraries-path"},(0,i.kt)("inlineCode",{parentName:"a"},"--linked-libraries"))," argument like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"$ protostar build-cairo1 --linked-libraries /path/to/the/external/lib\n")),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"Provided paths must contain correctly formatted cairo packages, otherwise build will fail.")),(0,i.kt)("h2",{id:"compiling-a-single-contract"},"Compiling a single contract"),(0,i.kt)("p",null,"If your ",(0,i.kt)("inlineCode",{parentName:"p"},"protostar.toml")," file defines multiple contracts and you wish to compile only one of them, you can specify\nthe ",(0,i.kt)("a",{parentName:"p",href:"/protostar/docs/cli-reference#--contract-name-string-1"},(0,i.kt)("inlineCode",{parentName:"a"},"--contract-name"))," argument:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"$ protostar build-cairo1 --contract-name my_contract\n")))}u.isMDXComponent=!0}}]);