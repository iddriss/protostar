"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7427],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return f}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=l(n),f=a,m=d["".concat(s,".").concat(f)]||d[f]||u[f]||o;return n?r.createElement(m,c(c({ref:t},p),{},{components:n})):r.createElement(m,c({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,c=new Array(o);c[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,c[1]=i;for(var l=2;l<o;l++)c[l]=n[l];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5077:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return c},default:function(){return u},frontMatter:function(){return o},metadata:function(){return i},toc:function(){return l}});var r=n(3117),a=(n(7294),n(3905));const o={},c="invoke",i={unversionedId:"tutorials/cairo-1-support/cheatcodes/invoke",id:"tutorials/cairo-1-support/cheatcodes/invoke",title:"invoke",description:"Invokes a contract's function. function_name parameter should be provided as a short string. invoke can mutate the state of the contract and does not return a value, to query the contract for values use call.",source:"@site/docs/tutorials/08-cairo-1-support/05-cheatcodes/invoke.md",sourceDirName:"tutorials/08-cairo-1-support/05-cheatcodes",slug:"/tutorials/cairo-1-support/cheatcodes/invoke",permalink:"/protostar/docs/tutorials/cairo-1-support/cheatcodes/invoke",draft:!1,editUrl:"https://github.com/software-mansion/protostar/tree/master/website/docs/tutorials/08-cairo-1-support/05-cheatcodes/invoke.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorials",previous:{title:"deploy_contract_cairo0",permalink:"/protostar/docs/tutorials/cairo-1-support/cheatcodes/deploy_contract_cairo0"},next:{title:"prepare",permalink:"/protostar/docs/tutorials/cairo-1-support/cheatcodes/prepare"}},s={},l=[{value:"Handling invoke failures",id:"handling-invoke-failures",level:2}],p={toc:l};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"invoke"},(0,a.kt)("inlineCode",{parentName:"h1"},"invoke")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cairo"},"fn invoke(contract_address: felt252, function_name: felt252, calldata: Array::<felt252>) -> Result::<(), RevertedTransaction> nopanic;\n\nstruct RevertedTransaction {\n    panic_data: Array::<felt252>, \n}\n\ntrait RevertedTransactionTrait {\n    fn first(self: @RevertedTransaction) -> felt252;\n}\n")),(0,a.kt)("p",null,"Invokes a contract's function. ",(0,a.kt)("inlineCode",{parentName:"p"},"function_name")," parameter should be provided as a short string. ",(0,a.kt)("inlineCode",{parentName:"p"},"invoke")," can mutate the state of the contract and does not return a value, to query the contract for values use ",(0,a.kt)("a",{parentName:"p",href:"/protostar/docs/tutorials/cairo-1-support/cheatcodes/call"},"call"),". "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cairo",metastring:'title="Example"',title:'"Example"'},"use result::ResultTrait;\nuse array::ArrayTrait;\n\n#[test]\nfn invoke_test() {\n\n    let contract_address = 123;\n\n    let mut calldata = ArrayTrait::new();\n    calldata.append(10);\n    calldata.append(11);\n    calldata.append(12);\n\n    invoke(contract_address, 'function_name', calldata).unwrap();\n\n    // ...\n}\n")),(0,a.kt)("h2",{id:"handling-invoke-failures"},"Handling invoke failures"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cairo",metastring:'title="Deployed contract"',title:'"Deployed','contract"':!0},"#[contract]\nmod MinimalContract {\n    #[external]\n    fn panic_with(panic_data: Array::<felt252>) {\n        panic(panic_data);\n    }\n}\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cairo",metastring:'title="Test"',title:'"Test"'},"use cheatcodes::RevertedTransactionTrait;\n\n#[test]\nfn test_invoke_errors() {\n    let mut panic_data = ArrayTrait::new();\n    panic_data.append(2); // Array length\n    panic_data.append('error');\n    panic_data.append('data');\n    \n    match invoke(deployed_contract_address, 'panic_with', panic_data) {\n        Result::Ok(x) => assert(false, 'Shouldnt have succeeded'),\n        Result::Err(x) => {\n            assert(x.first() == 'error', 'first datum doesnt match');\n            assert(*x.panic_data.at(1_u32) == 'data', 'second datum doesnt match');\n        }\n    }\n")))}u.isMDXComponent=!0}}]);