"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2469],{3905:function(t,e,r){r.d(e,{Zo:function(){return s},kt:function(){return d}});var o=r(7294);function n(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function a(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,o)}return r}function i(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?a(Object(r),!0).forEach((function(e){n(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function c(t,e){if(null==t)return{};var r,o,n=function(t,e){if(null==t)return{};var r,o,n={},a=Object.keys(t);for(o=0;o<a.length;o++)r=a[o],e.indexOf(r)>=0||(n[r]=t[r]);return n}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(o=0;o<a.length;o++)r=a[o],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(n[r]=t[r])}return n}var l=o.createContext({}),u=function(t){var e=o.useContext(l),r=e;return t&&(r="function"==typeof t?t(e):i(i({},e),t)),r},s=function(t){var e=u(t.components);return o.createElement(l.Provider,{value:e},t.children)},p={inlineCode:"code",wrapper:function(t){var e=t.children;return o.createElement(o.Fragment,{},e)}},m=o.forwardRef((function(t,e){var r=t.components,n=t.mdxType,a=t.originalType,l=t.parentName,s=c(t,["components","mdxType","originalType","parentName"]),m=u(r),d=n,f=m["".concat(l,".").concat(d)]||m[d]||p[d]||a;return r?o.createElement(f,i(i({ref:e},s),{},{components:r})):o.createElement(f,i({ref:e},s))}));function d(t,e){var r=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var a=r.length,i=new Array(a);i[0]=m;var c={};for(var l in e)hasOwnProperty.call(e,l)&&(c[l]=e[l]);c.originalType=t,c.mdxType="string"==typeof t?t:n,i[1]=c;for(var u=2;u<a;u++)i[u]=r[u];return o.createElement.apply(null,i)}return o.createElement.apply(null,r)}m.displayName="MDXCreateElement"},8594:function(t,e,r){r.r(e),r.d(e,{assets:function(){return l},contentTitle:function(){return i},default:function(){return p},frontMatter:function(){return a},metadata:function(){return c},toc:function(){return u}});var o=r(3117),n=(r(7294),r(3905));const a={sidebar_label:"Requirements"},i="Requirements",c={unversionedId:"tutorials/cairo-1-support/requirements",id:"tutorials/cairo-1-support/requirements",title:"Requirements",description:"Project structure",source:"@site/docs/tutorials/08-cairo-1-support/01-requirements.md",sourceDirName:"tutorials/08-cairo-1-support",slug:"/tutorials/cairo-1-support/requirements",permalink:"/protostar/docs/tutorials/cairo-1-support/requirements",draft:!1,editUrl:"https://github.com/software-mansion/protostar/tree/master/website/docs/tutorials/08-cairo-1-support/01-requirements.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_label:"Requirements"},sidebar:"tutorials",previous:{title:"End-to-end tests",permalink:"/protostar/docs/tutorials/testing/e2e"},next:{title:"Project initialization",permalink:"/protostar/docs/tutorials/cairo-1-support/project-initialization"}},l={},u=[{value:"Project structure",id:"project-structure",level:2},{value:"Module name",id:"module-name",level:2},{value:"Multiple contracts for a project",id:"multiple-contracts-for-a-project",level:2},{value:"Mutual code for multiple contracts",id:"mutual-code-for-multiple-contracts",level:2}],s={toc:u};function p(t){let{components:e,...r}=t;return(0,n.kt)("wrapper",(0,o.Z)({},s,r,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"requirements"},"Requirements"),(0,n.kt)("h2",{id:"project-structure"},"Project structure"),(0,n.kt)("admonition",{type:"note"},(0,n.kt)("p",{parentName:"admonition"},"Cairo 1 is constantly being updated, so all the requirements mentioned here may change in the future.")),(0,n.kt)("p",null,"Currently, Cairo1 forces the following file structure of a contract:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"my_contract/\n\u251c\u2500\u2500 lib.cairo\n\u251c\u2500\u2500 cairo_project.toml\n")),(0,n.kt)("p",null,"That means that you can have only one contract per module. More information about modules ",(0,n.kt)("a",{parentName:"p",href:"/protostar/docs/tutorials/cairo-1-support/project-initialization#cairo-1-modules"},"here"),"."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"my_contract")," - a root directory for a contract",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"cairo_project.toml")," which is needed for compilation. Its purpose is to specify a path to the crate roots of the contract.\nThis file usually looks like this:",(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre"},'[crate_roots]\nmy_contract = "."\n'))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"lib.cairo")," file which defines the module and may also contain the code of the contract.")))),(0,n.kt)("h2",{id:"module-name"},"Module name"),(0,n.kt)("p",null,"The name must use only ASCII alphanumeric characters or ",(0,n.kt)("inlineCode",{parentName:"p"},"_"),", and cannot be empty. It cannot also start with underscore. For the alternative reference, please see ",(0,n.kt)("a",{parentName:"p",href:"https://docs.swmansion.com/scarb/docs/reference/manifest#name"},"this"),"."),(0,n.kt)("h2",{id:"multiple-contracts-for-a-project"},"Multiple contracts for a project"),(0,n.kt)("p",null,"If you wish to have multiple contracts for a single project, you need to put them in separate ",(0,n.kt)("a",{parentName:"p",href:"/protostar/docs/tutorials/cairo-1-support/project-initialization#cairo-1-modules"},"modules"),"."),(0,n.kt)("h2",{id:"mutual-code-for-multiple-contracts"},"Mutual code for multiple contracts"),(0,n.kt)("p",null,"If you want to have code that will be shared between multiple contracts, you need to wrap this code into a shared library.\nThat means you have to wrap this code in the ",(0,n.kt)("a",{parentName:"p",href:"/protostar/docs/tutorials/cairo-1-support/project-initialization#cairo-1-modules"},"module")," and then add a path of this module to the ",(0,n.kt)("a",{parentName:"p",href:"/protostar/docs/tutorials/cairo-1-support/project-initialization#the-protostartoml"},"protostar.toml"),"'s ",(0,n.kt)("inlineCode",{parentName:"p"},"linked-libraries"),"."))}p.isMDXComponent=!0}}]);