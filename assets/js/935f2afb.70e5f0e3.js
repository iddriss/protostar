"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[53],{1109:function(t){t.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorials":[{"type":"link","label":"Introduction","href":"/protostar/docs/tutorials/introduction","docId":"tutorials/introduction"},{"type":"link","label":"Installation","href":"/protostar/docs/tutorials/installation","docId":"tutorials/installation"},{"type":"link","label":"Project initialization","href":"/protostar/docs/tutorials/project-initialization","docId":"tutorials/project-initialization"},{"type":"link","label":"Compilation","href":"/protostar/docs/tutorials/compiling","docId":"tutorials/compiling"},{"type":"link","label":"Dependencies","href":"/protostar/docs/tutorials/dependencies-management","docId":"tutorials/dependencies-management"},{"type":"category","label":"Deployment","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"CLI","href":"/protostar/docs/tutorials/deploying/cli","docId":"tutorials/deploying/cli"},{"type":"category","label":"Migrations","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"call","href":"/protostar/docs/tutorials/deploying/migrations/call","docId":"tutorials/deploying/migrations/call"},{"type":"link","label":"declare","href":"/protostar/docs/tutorials/deploying/migrations/declare","docId":"tutorials/deploying/migrations/declare"},{"type":"link","label":"deploy_contract","href":"/protostar/docs/tutorials/deploying/migrations/deploy-contract","docId":"tutorials/deploying/migrations/deploy-contract"},{"type":"link","label":"invoke","href":"/protostar/docs/tutorials/deploying/migrations/invoke","docId":"tutorials/deploying/migrations/invoke"}],"href":"/protostar/docs/tutorials/deploying/migrations/"},{"type":"link","label":"Network configuration","href":"/protostar/docs/tutorials/deploying/network-config","docId":"tutorials/deploying/network-config"}],"href":"/protostar/docs/tutorials/deploying/"},{"type":"category","label":"Testing","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Deploying contracts from tests","href":"/protostar/docs/tutorials/testing/deploying-contracts","docId":"tutorials/testing/deploying-contracts"},{"type":"category","label":"Cheatcodes","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"assume","href":"/protostar/docs/tutorials/testing/cheatcodes/assume","docId":"tutorials/testing/cheatcodes/assume"},{"type":"link","label":"declare","href":"/protostar/docs/tutorials/testing/cheatcodes/declare","docId":"tutorials/testing/cheatcodes/declare"},{"type":"link","label":"deploy_contract","href":"/protostar/docs/tutorials/testing/cheatcodes/deploy-contract","docId":"tutorials/testing/cheatcodes/deploy-contract"},{"type":"link","label":"deploy","href":"/protostar/docs/tutorials/testing/cheatcodes/deploy","docId":"tutorials/testing/cheatcodes/deploy"},{"type":"link","label":"example","href":"/protostar/docs/tutorials/testing/cheatcodes/example","docId":"tutorials/testing/cheatcodes/example"},{"type":"link","label":"expect_events","href":"/protostar/docs/tutorials/testing/cheatcodes/expect-events","docId":"tutorials/testing/cheatcodes/expect-events"},{"type":"link","label":"expect_revert","href":"/protostar/docs/tutorials/testing/cheatcodes/expect-revert","docId":"tutorials/testing/cheatcodes/expect-revert"},{"type":"link","label":"given","href":"/protostar/docs/tutorials/testing/cheatcodes/given","docId":"tutorials/testing/cheatcodes/given"},{"type":"link","label":"load","href":"/protostar/docs/tutorials/testing/cheatcodes/load","docId":"tutorials/testing/cheatcodes/load"},{"type":"link","label":"max_examples","href":"/protostar/docs/tutorials/testing/cheatcodes/max-examples","docId":"tutorials/testing/cheatcodes/max-examples"},{"type":"link","label":"mock_call","href":"/protostar/docs/tutorials/testing/cheatcodes/mock-call","docId":"tutorials/testing/cheatcodes/mock-call"},{"type":"link","label":"prepare","href":"/protostar/docs/tutorials/testing/cheatcodes/prepare","docId":"tutorials/testing/cheatcodes/prepare"},{"type":"link","label":"reflect","href":"/protostar/docs/tutorials/testing/cheatcodes/reflect","docId":"tutorials/testing/cheatcodes/reflect"},{"type":"link","label":"reject","href":"/protostar/docs/tutorials/testing/cheatcodes/reject","docId":"tutorials/testing/cheatcodes/reject"},{"type":"link","label":"roll","href":"/protostar/docs/tutorials/testing/cheatcodes/roll","docId":"tutorials/testing/cheatcodes/roll"},{"type":"link","label":"send_message_to_l2","href":"/protostar/docs/tutorials/testing/cheatcodes/send-message-to-l2","docId":"tutorials/testing/cheatcodes/send-message-to-l2"},{"type":"link","label":"skip","href":"/protostar/docs/tutorials/testing/cheatcodes/skip","docId":"tutorials/testing/cheatcodes/skip"},{"type":"link","label":"start_prank","href":"/protostar/docs/tutorials/testing/cheatcodes/start-prank","docId":"tutorials/testing/cheatcodes/start-prank"},{"type":"link","label":"store","href":"/protostar/docs/tutorials/testing/cheatcodes/store","docId":"tutorials/testing/cheatcodes/store"},{"type":"link","label":"strategy","href":"/protostar/docs/tutorials/testing/cheatcodes/strategy","docId":"tutorials/testing/cheatcodes/strategy"},{"type":"link","label":"warp","href":"/protostar/docs/tutorials/testing/cheatcodes/warp","docId":"tutorials/testing/cheatcodes/warp"}],"href":"/protostar/docs/tutorials/testing/cheatcodes/"},{"type":"category","label":"Fuzzing","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Reproducing failures","href":"/protostar/docs/tutorials/testing/fuzzing/reproducing-failures","docId":"tutorials/testing/fuzzing/reproducing-failures"},{"type":"link","label":"Strategies","href":"/protostar/docs/tutorials/testing/fuzzing/strategies","docId":"tutorials/testing/fuzzing/strategies"}],"href":"/protostar/docs/tutorials/testing/fuzzing/"}],"href":"/protostar/docs/tutorials/testing/"},{"type":"link","label":"Formatting","href":"/protostar/docs/tutorials/formatting","docId":"tutorials/formatting"},{"type":"link","label":"Profiling","href":"/protostar/docs/tutorials/profiling","docId":"tutorials/profiling"}]},"docs":{"cli-reference":{"id":"cli-reference","title":"CLI Reference","description":"Common flags"},"tutorials/compiling":{"id":"tutorials/compiling","title":"Project compilation","description":"In order to compile your project:","sidebar":"tutorials"},"tutorials/dependencies-management":{"id":"tutorials/dependencies-management","title":"Dependencies","description":"Protostar manages dependencies (packages) using git submodules (similarly to Foundry). This is the reason Protostar expects git to be installed. Keep this in mind, especially if your project uses git submodules.","sidebar":"tutorials"},"tutorials/deploying/cli":{"id":"tutorials/deploying/cli","title":"Deployment CLI","description":"Protostar offers similar CLI to StarkNet\'s CLI. However, with Protostar you can move deployment configuration to protostar.toml and display help for each command.","sidebar":"tutorials"},"tutorials/deploying/migrations/call":{"id":"tutorials/deploying/migrations/call","title":"call","description":"Calls a StarkNet contract without affecting the StarkNet\'s state.","sidebar":"tutorials"},"tutorials/deploying/migrations/declare":{"id":"tutorials/deploying/migrations/declare","title":"declare","description":"Sends a declare transaction.","sidebar":"tutorials"},"tutorials/deploying/migrations/deploy-contract":{"id":"tutorials/deploying/migrations/deploy-contract","title":"deploy_contract","description":"This cheatcode will be removed once StarkNet drops support for deploy transaction.","sidebar":"tutorials"},"tutorials/deploying/migrations/invoke":{"id":"tutorials/deploying/migrations/invoke","title":"invoke","description":"This cheatcode invokes a StarkNet contract, with possible state changes. Can be useful for initializing proxies, etc.","sidebar":"tutorials"},"tutorials/deploying/migrations/README":{"id":"tutorials/deploying/migrations/README","title":"Migrations","description":"Breaking changes can be introduced without deprecation. StarkNet deployment flow can change, so Protostar will follow in the future.","sidebar":"tutorials"},"tutorials/deploying/network-config":{"id":"tutorials/deploying/network-config","title":"Network configuration","description":"CheatcodeNetworkConfig stores configuration used in declare and deploy_contract cheatcodes.","sidebar":"tutorials"},"tutorials/deploying/README":{"id":"tutorials/deploying/README","title":"Deployment","description":"Prerequisites","sidebar":"tutorials"},"tutorials/formatting":{"id":"tutorials/formatting","title":"Formatting","description":"Protostar comes with a built-in Cairo source code formatter.","sidebar":"tutorials"},"tutorials/installation":{"id":"tutorials/installation","title":"Installation","description":"Requirements","sidebar":"tutorials"},"tutorials/introduction":{"id":"tutorials/introduction","title":"Introduction","description":"Protostar is a StarkNet smart contract development toolchain, which helps you with the following tasks:","sidebar":"tutorials"},"tutorials/profiling":{"id":"tutorials/profiling","title":"Profiling","description":"Prerequisites","sidebar":"tutorials"},"tutorials/project-initialization":{"id":"tutorials/project-initialization","title":"Project initialization","description":"To create a new project run:","sidebar":"tutorials"},"tutorials/testing/cheatcodes/assume":{"id":"tutorials/testing/cheatcodes/assume","title":"assume","description":"assume(condition) skips testing against the given example if the condition is False.","sidebar":"tutorials"},"tutorials/testing/cheatcodes/declare":{"id":"tutorials/testing/cheatcodes/declare","title":"declare","description":"Declares contract given a path relative to a Protostar project root.","sidebar":"tutorials"},"tutorials/testing/cheatcodes/deploy":{"id":"tutorials/testing/cheatcodes/deploy","title":"deploy","description":"Deploys contract for deployment given PreparedContract.","sidebar":"tutorials"},"tutorials/testing/cheatcodes/deploy-contract":{"id":"tutorials/testing/cheatcodes/deploy-contract","title":"deploy_contract","description":"Deploys a contract given a path relative to a Protostar project root. The section Deploying contracts from tests demonstrates a usage of this cheatcode.","sidebar":"tutorials"},"tutorials/testing/cheatcodes/example":{"id":"tutorials/testing/cheatcodes/example","title":"example","description":"Parametrizes test with explicitly provided data.","sidebar":"tutorials"},"tutorials/testing/cheatcodes/expect-events":{"id":"tutorials/testing/cheatcodes/expect-events","title":"expect_events","description":"Compares expected events with events in the StarkNet state. You can use this cheatcode to test whether a contract emits specified events. Protostar compares events after a test case is completed. Therefore, you can use this cheatcode in any place within a test case.","sidebar":"tutorials"},"tutorials/testing/cheatcodes/expect-revert":{"id":"tutorials/testing/cheatcodes/expect-revert","title":"expect_revert","description":"If a code beneath expect_revert raises a specified exception, a test will pass. If not, a test will fail.","sidebar":"tutorials"},"tutorials/testing/cheatcodes/given":{"id":"tutorials/testing/cheatcodes/given","title":"given","description":"Instructs the fuzzer to adopt a different fuzzing strategy for input parameters.","sidebar":"tutorials"},"tutorials/testing/cheatcodes/load":{"id":"tutorials/testing/cheatcodes/load","title":"load","description":"Loads storage variable with name variablename and given key and variabletype from a contract with targetcontractaddress.","sidebar":"tutorials"},"tutorials/testing/cheatcodes/max-examples":{"id":"tutorials/testing/cheatcodes/max-examples","title":"max_examples","description":"Sets the maximum number of examples to explore by the fuzzer.","sidebar":"tutorials"},"tutorials/testing/cheatcodes/mock-call":{"id":"tutorials/testing/cheatcodes/mock-call","title":"mock_call","description":"Mocks all calls to function with the name fnname of a contract with an address contractaddress, until the returned callable is called.","sidebar":"tutorials"},"tutorials/testing/cheatcodes/prepare":{"id":"tutorials/testing/cheatcodes/prepare","title":"prepare","description":"Prepares contract for deployment given DeclaredContract and constructor_calldata. The cheatcode is useful when you want to know contract address before deploying it to affect constructor with a targeted cheatcode. Example:","sidebar":"tutorials"},"tutorials/testing/cheatcodes/README":{"id":"tutorials/testing/cheatcodes/README","title":"Cheatcodes","description":"Most of the time, testing smart contracts with assertions only is not enough.","sidebar":"tutorials"},"tutorials/testing/cheatcodes/reflect":{"id":"tutorials/testing/cheatcodes/reflect","title":"reflect","description":"Loads specified Cairo object into a Python type. reflect is an instance of the Reflector object that works simillarly to ids. To retrieve the value use get() method which can return:","sidebar":"tutorials"},"tutorials/testing/cheatcodes/reject":{"id":"tutorials/testing/cheatcodes/reject","title":"reject","description":"reject() skips testing against the given example.","sidebar":"tutorials"},"tutorials/testing/cheatcodes/roll":{"id":"tutorials/testing/cheatcodes/roll","title":"roll","description":"Changes a block number until the returned function is called. If targetcontractaddress is specified, roll affects only the contract with the specified address. Otherwise, roll affects the current contract.","sidebar":"tutorials"},"tutorials/testing/cheatcodes/send-message-to-l2":{"id":"tutorials/testing/cheatcodes/send-message-to-l2","title":"send_message_to_l2","description":"This cheatcode simulates an incoming message from L1 to L2 executed with fnname at toaddress contract address.","sidebar":"tutorials"},"tutorials/testing/cheatcodes/skip":{"id":"tutorials/testing/cheatcodes/skip","title":"skip","description":"Skip a test. You can use this cheatcode to prepare tests for functionality that isn\'t completed yet.","sidebar":"tutorials"},"tutorials/testing/cheatcodes/start-prank":{"id":"tutorials/testing/cheatcodes/start-prank","title":"start_prank","description":"Changes a caller address returned by getcalleraddress() until the returned callable is called. If targetcontractaddress is specified, startprank affects only the contract with the specified address. Otherwise, startprank affects the current contract.","sidebar":"tutorials"},"tutorials/testing/cheatcodes/store":{"id":"tutorials/testing/cheatcodes/store","title":"store","description":"Updates storage variable with name variablename and given key to value of a contract with targetcontract_address.","sidebar":"tutorials"},"tutorials/testing/cheatcodes/strategy":{"id":"tutorials/testing/cheatcodes/strategy","title":"strategy","description":"A [Python namespace] containing constructors of built-in fuzzing strategies.","sidebar":"tutorials"},"tutorials/testing/cheatcodes/warp":{"id":"tutorials/testing/cheatcodes/warp","title":"warp","description":"Changes a block timestamp until the returned function is called. If targetcontractaddress is specified, warp affects only the contract with the specified address. Otherwise, warp affects the current contract.","sidebar":"tutorials"},"tutorials/testing/deploying-contracts":{"id":"tutorials/testing/deploying-contracts","title":"Deploying contracts from tests","description":"For most projects, testing of isolated functions won\'t be enough.","sidebar":"tutorials"},"tutorials/testing/fuzzing/README":{"id":"tutorials/testing/fuzzing/README","title":"Fuzzing","description":"This feature is actively developed and many new additions will land in future Protostar releases.","sidebar":"tutorials"},"tutorials/testing/fuzzing/reproducing-failures":{"id":"tutorials/testing/fuzzing/reproducing-failures","title":"Reproducing failures","description":"An important aspect of developing code with a fuzz testing suite, is how to reproduce failing test","sidebar":"tutorials"},"tutorials/testing/fuzzing/strategies":{"id":"tutorials/testing/fuzzing/strategies","title":"Strategies","description":"Often in code we operate on some assumptions about the possible values of variables.","sidebar":"tutorials"},"tutorials/testing/README":{"id":"tutorials/testing/README","title":"Testing","description":"Protostar provides a flexible testing environment for Cairo smart contracts.","sidebar":"tutorials"}}}')}}]);