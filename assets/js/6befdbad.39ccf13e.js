"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8376],{3905:function(t,e,n){n.d(e,{Zo:function(){return p},kt:function(){return d}});var r=n(7294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function i(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?i(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function l(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},i=Object.keys(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var s=r.createContext({}),c=function(t){var e=r.useContext(s),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},p=function(t){var e=c(t.components);return r.createElement(s.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},m=r.forwardRef((function(t,e){var n=t.components,a=t.mdxType,i=t.originalType,s=t.parentName,p=l(t,["components","mdxType","originalType","parentName"]),m=c(n),d=a,f=m["".concat(s,".").concat(d)]||m[d]||u[d]||i;return n?r.createElement(f,o(o({ref:e},p),{},{components:n})):r.createElement(f,o({ref:e},p))}));function d(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var s in e)hasOwnProperty.call(e,s)&&(l[s]=e[s]);l.originalType=t,l.mdxType="string"==typeof t?t:a,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1144:function(t,e,n){n.r(e),n.d(e,{assets:function(){return s},contentTitle:function(){return o},default:function(){return u},frontMatter:function(){return i},metadata:function(){return l},toc:function(){return c}});var r=n(3117),a=(n(7294),n(3905));const i={},o="Multicall",l={unversionedId:"tutorials/interacting-with-starknet/multicall",id:"tutorials/interacting-with-starknet/multicall",title:"Multicall",description:"Overview",source:"@site/docs/tutorials/09-interacting-with-starknet/07-multicall.md",sourceDirName:"tutorials/09-interacting-with-starknet",slug:"/tutorials/interacting-with-starknet/multicall",permalink:"/protostar/docs/tutorials/interacting-with-starknet/multicall",draft:!1,editUrl:"https://github.com/software-mansion/protostar/tree/master/website/docs/tutorials/09-interacting-with-starknet/07-multicall.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{},sidebar:"tutorials",previous:{title:"Signing",permalink:"/protostar/docs/tutorials/interacting-with-starknet/signing"},next:{title:"Scripting",permalink:"/protostar/docs/tutorials/interacting-with-starknet/scripting"}},s={},c=[{value:"Overview",id:"overview",level:2},{value:"Usage example",id:"usage-example",level:2}],p={toc:c};function u(t){let{components:e,...n}=t;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"multicall"},"Multicall"),(0,a.kt)("h2",{id:"overview"},"Overview"),(0,a.kt)("p",null,"Multicall executes multiple calls as a single transaction. If one call fails, the entire operation is aborted. Use it to prevent leaving your system in an inconsistent state. "),(0,a.kt)("h2",{id:"usage-example"},"Usage example"),(0,a.kt)("p",null,"Before you run ",(0,a.kt)("a",{parentName:"p",href:"/docs/cli-reference#multicall"},(0,a.kt)("inlineCode",{parentName:"a"},"protostar multicall")),", you need to ",(0,a.kt)("a",{parentName:"p",href:"/protostar/docs/tutorials/interacting-with-starknet/deploy-account"},"create an account")," in order to ",(0,a.kt)("a",{parentName:"p",href:"/protostar/docs/tutorials/interacting-with-starknet/signing"},"sign the transaction"),". If you want to deploy contract within a multicall, you need to ",(0,a.kt)("a",{parentName:"p",href:"/protostar/docs/tutorials/interacting-with-starknet/declare"},"declare")," it first."),(0,a.kt)("p",null,"Then, create a toml file containing calls defined as ",(0,a.kt)("a",{parentName:"p",href:"https://toml.io/en/v1.0.0#array-of-tables"},"array of tables"),".\nIn that file, you can use contract address of a contract to be deployed by using references (",(0,a.kt)("inlineCode",{parentName:"p"},"$DEPLOY_CALL_ID"),").\nReferences can be used in ",(0,a.kt)("inlineCode",{parentName:"p"},"contract-address")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"inputs")," attributes as demonstrated in the example below."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-toml",metastring:'title="calls.toml"',title:'"calls.toml"'},'[[call]]\ntype = "deploy"\nclass-hash = 0xDEADBEEF\ninputs = []\nid = "my_contract"\n\n[[call]]\ntype = "invoke"\ncontract-address = "$my_contract"\nfunction = "increase_balance"\ninputs = [42]\n')),(0,a.kt)("p",null,"Protostar supports two types of calls \u2014 ",(0,a.kt)("inlineCode",{parentName:"p"},"deploy")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"invoke"),", which take similar arguments to ",(0,a.kt)("a",{parentName:"p",href:"/docs/cli-reference#deploy"},(0,a.kt)("inlineCode",{parentName:"a"},"deploy command"))," and ",(0,a.kt)("a",{parentName:"p",href:"/docs/cli-reference#invoke"},(0,a.kt)("inlineCode",{parentName:"a"},"invoke command")),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-toml",metastring:'title="protostar.toml"',title:'"protostar.toml"'},'[project]\nprotostar-version = "0.8.1"\n\n[multicall]\naccount-address = 0x...\ngateway-url = "http://127.0.0.1:5050"\nchain-id = 1536727068981429685321\nmax-fee = "auto"\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="Calling multicall"',title:'"Calling','multicall"':!0},"export PROTOSTAR_ACCOUNT_PRIVATE_KEY 0x...\nprotostar multicall calls.toml\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="Protostar shows transaction hash and addresses of deployed contracts"',title:'"Protostar',shows:!0,transaction:!0,hash:!0,and:!0,addresses:!0,of:!0,deployed:!0,'contracts"':!0},"Multicall has been sent.\ntransaction hash: 0x...\nmy_contract     : 0x...\n")))}u.isMDXComponent=!0}}]);