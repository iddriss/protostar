"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4698],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(n),m=o,f=u["".concat(l,".").concat(m)]||u[m]||d[m]||r;return n?a.createElement(f,i(i({ref:t},p),{},{components:n})):a.createElement(f,i({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var c=2;c<r;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},2685:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return i},default:function(){return d},frontMatter:function(){return r},metadata:function(){return s},toc:function(){return c}});var a=n(3117),o=(n(7294),n(3905));const r={sidebar_label:"CLI"},i="Deployment CLI",s={unversionedId:"tutorials/deploying/cli",id:"tutorials/deploying/cli",title:"Deployment CLI",description:"Protostar offers similar CLI to StarkNet's CLI. However, with Protostar you can move deployment configuration to protostar.toml and display help for each command.",source:"@site/docs/tutorials/08-deploying/01-cli.md",sourceDirName:"tutorials/08-deploying",slug:"/tutorials/deploying/cli",permalink:"/protostar/docs/tutorials/deploying/cli",draft:!1,editUrl:"https://github.com/software-mansion/protostar/tree/master/website/docs/tutorials/08-deploying/01-cli.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_label:"CLI"},sidebar:"tutorials",previous:{title:"Deployment",permalink:"/protostar/docs/tutorials/deploying/"},next:{title:"Migrations",permalink:"/protostar/docs/tutorials/deploying/migrations/"}},l={},c=[{value:"Declaring a contract",id:"declaring-a-contract",level:2},{value:"Signing a declaration",id:"signing-a-declaration",level:3},{value:"1. StarkCurveSigner",id:"1-starkcurvesigner",level:3},{value:"2. Using a custom signer class",id:"2-using-a-custom-signer-class",level:3},{value:"Sending Invoke Transaction",id:"sending-invoke-transaction",level:2},{value:"Deploying",id:"deploying",level:2},{value:"Example \u2014 deploying the default contract",id:"example--deploying-the-default-contract",level:3},{value:"Using configuration profiles",id:"using-configuration-profiles",level:2}],p={toc:c};function d(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"deployment-cli"},"Deployment CLI"),(0,o.kt)("p",null,"Protostar offers similar CLI to ",(0,o.kt)("a",{parentName:"p",href:"https://docs.starknet.io/docs/CLI/commands"},"StarkNet's CLI"),". However, with Protostar you can move deployment configuration to ",(0,o.kt)("a",{parentName:"p",href:"/docs/tutorials/project-initialization#protostartoml"},(0,o.kt)("inlineCode",{parentName:"a"},"protostar.toml"))," and display help for each command."),(0,o.kt)("h2",{id:"declaring-a-contract"},"Declaring a contract"),(0,o.kt)("p",null,"StarkNet provides a distinction between contract class and instance. To create a new contract, you need to:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Declare a contract"),(0,o.kt)("li",{parentName:"ol"},"Use the deploy syscall with the ",(0,o.kt)("inlineCode",{parentName:"li"},"class_hash")," from the declare transaction as an argument",(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-cairo"},"from starkware.starknet.common.syscalls import deploy\n")))),(0,o.kt)("p",null,"To declare a contract from the Protostar CLI you need to build your project and use the ",(0,o.kt)("inlineCode",{parentName:"p"},"protostar declare")," command."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console",metastring:'title="protostar declare ./build/main.json --network testnet"',title:'"protostar',declare:!0,"./build/main.json":!0,"--network":!0,'testnet"':!0},"[INFO] Declare transaction was sent.\nClass hash: 0x038cc...\nTransaction hash: 0x3c6c...\n\nhttps://goerli.voyager.online/contract/0x038cc...\n")),(0,o.kt)("h3",{id:"signing-a-declaration"},"Signing a declaration"),(0,o.kt)("p",null,"Since Cairo v0.10 declare transactions can be signed.\nProtostar offers two ways of providing the signature:"),(0,o.kt)("h3",{id:"1-starkcurvesigner"},"1. StarkCurveSigner"),(0,o.kt)("p",null,"By default, Protostar uses the ",(0,o.kt)("a",{parentName:"p",href:"https://starknetpy.readthedocs.io/en/latest/signer.html#starknet_py.net.signer.stark_curve_signer.StarkCurveSigner"},"StarkCurveSigner class")," from Starknet.py."),(0,o.kt)("p",null,"This way requires you to pass a private key (for signing) and account contract's address (to fetch the nonce).\nYou can obtain the key and account address e.g. from ",(0,o.kt)("a",{parentName:"p",href:"https://chrome.google.com/webstore/detail/argent-x/dlcobpjiigpikoobohmabehhmhfoodbb"},"Argentx")," or ",(0,o.kt)("a",{parentName:"p",href:"https://chrome.google.com/webstore/detail/braavos-wallet/jnlgamecbpmbajjfhmmmlhejkemejdma"},"Braavos")," wallets. "),(0,o.kt)("p",null,"2 options are used for this:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"private-key-path")," - a path to the file containing hex-encoded private key"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"account-address")," - your account contract's address (hex-encoded as well) on the appropriate network")),(0,o.kt)("p",null,"Alternatively, if you prefer not to store private key in a file, we check for ",(0,o.kt)("inlineCode",{parentName:"p"},"PROTOSTAR_ACCOUNT_PRIVATE_KEY")," environment variable, and use it if it's available.",(0,o.kt)("br",{parentName:"p"}),"\n","It should be in the same hex-encoded format, like all the options above."),(0,o.kt)("h3",{id:"2-using-a-custom-signer-class"},"2. Using a custom signer class"),(0,o.kt)("p",null,"You can provide a custom signer class which inherits from ",(0,o.kt)("a",{parentName:"p",href:"https://starknetpy.readthedocs.io/en/latest/signer.html#starknet_py.net.signer.BaseSigner"},"BaseSigner")," abstract class.\nThis way of signing requires you to write a class in Python, which signs the transaction in a way that is suitable to you.\nAfter writing such class, simply use ",(0,o.kt)("inlineCode",{parentName:"p"},"signer_class")," argument in the CLI for ",(0,o.kt)("inlineCode",{parentName:"p"},"declare")," command to use that class instead of the default one.\nUsage of this way of signing is exclusive with the default signer strategy."),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"The custom signer class must not take any arguments in the constructor, since we don't pass any args on instantiation.")),(0,o.kt)("p",null,"The Python file containing this class can be put next to Cairo source code.\nProtostar synchronizes ",(0,o.kt)("inlineCode",{parentName:"p"},"PYTHONPATH")," with project's ",(0,o.kt)("inlineCode",{parentName:"p"},"cairo_path"),".\nModules that are dependencies of Protostar (like ",(0,o.kt)("inlineCode",{parentName:"p"},"starknet_py")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"cairo-lang"),") should be available for importing by default.\nIf you want to import other custom modules, you should extend ",(0,o.kt)("inlineCode",{parentName:"p"},"PYTHONPATH")," yourself (",(0,o.kt)("a",{parentName:"p",href:"https://docs.python.org/3/using/cmdline.html#envvar-PYTHONPATH"},"https://docs.python.org/3/using/cmdline.html#envvar-PYTHONPATH"),"), when running this command."),(0,o.kt)("h2",{id:"sending-invoke-transaction"},"Sending Invoke Transaction"),(0,o.kt)("p",null,"Protostar supports invoking contract functions from the CLI level.\nInvoking can be used to invoke ",(0,o.kt)("a",{parentName:"p",href:"https://community.starknet.io/t/universal-deployer-contract-proposal/1864"},"deployer contracts"),".\nTo send an invoke transaction use ",(0,o.kt)("a",{parentName:"p",href:"/docs/cli-reference#invoke"},(0,o.kt)("inlineCode",{parentName:"a"},"protostar invoke")),". The transaction can be ",(0,o.kt)("a",{parentName:"p",href:"#signing-a-declaration"},"signed similarly to the declare transaction"),"."),(0,o.kt)("h2",{id:"deploying"},"Deploying"),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"The deploy transaction will be deprecated in future StarkNet versions. To deploy new contract instances, you can use the deploy syscall. For more information, read ",(0,o.kt)("a",{parentName:"p",href:"https://docs.starknet.io/docs/Contracts/contract-classes"},"StarkNet's Contract Classes documentation"),".")),(0,o.kt)("p",null,"Protostar supports deploying smart contracts to a given network with the ",(0,o.kt)("inlineCode",{parentName:"p"},"protostar deploy")," command. It has a similar interface to the ",(0,o.kt)("inlineCode",{parentName:"p"},"starknet deploy")," command. ",(0,o.kt)("a",{parentName:"p",href:"/protostar/docs/cli-reference#deploy"},"Read the CLI reference for the deploy command")," to learn more about all supported arguments."),(0,o.kt)("h3",{id:"example--deploying-the-default-contract"},"Example \u2014 deploying the default contract"),(0,o.kt)("p",null,"After ",(0,o.kt)("a",{parentName:"p",href:"/protostar/docs/tutorials/compiling"},"compiling your contract"),", you can deploy the contract in the following way."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console",metastring:'title="protostar deploy ./build/main.json --network testnet"',title:'"protostar',deploy:!0,"./build/main.json":!0,"--network":!0,'testnet"':!0},"[INFO] Deploy transaction was sent.\nContract address: 0x06a5ea9e42c921bd58e24b8da9d1fc91a488df0700b173f1c6bb0e453f68afec\nTransaction hash: 0x1cbba90ba0d1fbfba09b1f7a0f987134dd9a02a845ca89244b3272374d37ede\n\nhttps://goerli.voyager.online/contract/0x06a5ea9e42c921bd58e24b8da9d1fc91a488df0700b173f1c6bb0e453f68afec\n")),(0,o.kt)("h2",{id:"using-configuration-profiles"},"Using ",(0,o.kt)("a",{parentName:"h2",href:"/protostar/docs/tutorials/project-initialization#configuration-profiles"},"configuration profiles")),(0,o.kt)("p",null,"Configuration profiles allow you to easily reuse configuration for devnet, testnet, and mainnet networks. You can define a network configuration in the ",(0,o.kt)("inlineCode",{parentName:"p"},"protostar.toml")," as demonstrated in the snippet below."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-toml",metastring:"title=protostar.toml",title:"protostar.toml"},'# ...\n\n# https://github.com/Shard-Labs/starknet-devnet\n["profile.devnet.protostar.deploy"]\ngateway-url="http://127.0.0.1:5050/"\n\n["profile.testnet.protostar.deploy"]\nnetwork="testnet"\n\n["profile.mainnet.protostar.deploy"]\nnetwork="mainnet"\n')),(0,o.kt)("p",null,"Then, run ",(0,o.kt)("inlineCode",{parentName:"p"},"deploy")," command with the ",(0,o.kt)("inlineCode",{parentName:"p"},"--profile")," argument."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text"},"protostar -p devnet deploy ./build/main.json\n")))}d.isMDXComponent=!0}}]);