"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5282],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return f}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),i=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},p=function(e){var t=i(e.components);return n.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=i(r),f=a,m=u["".concat(l,".").concat(f)]||u[f]||d[f]||o;return r?n.createElement(m,c(c({ref:t},p),{},{components:r})):n.createElement(m,c({ref:t},p))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,c=new Array(o);c[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,c[1]=s;for(var i=2;i<o;i++)c[i]=r[i];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},854:function(e,t,r){r.r(t),r.d(t,{assets:function(){return l},contentTitle:function(){return c},default:function(){return d},frontMatter:function(){return o},metadata:function(){return s},toc:function(){return i}});var n=r(3117),a=(r(7294),r(3905));const o={},c="deploy",s={unversionedId:"cairo-1/testing/cheatcodes-reference/deploy",id:"cairo-1/testing/cheatcodes-reference/deploy",title:"deploy",description:"Deploys a prepared contract.",source:"@site/docs/cairo-1/06-testing/cheatcodes-reference/deploy.md",sourceDirName:"cairo-1/06-testing/cheatcodes-reference",slug:"/cairo-1/testing/cheatcodes-reference/deploy",permalink:"/protostar/docs/cairo-1/testing/cheatcodes-reference/deploy",draft:!1,editUrl:"https://github.com/software-mansion/protostar/tree/master/website/docs/cairo-1/06-testing/cheatcodes-reference/deploy.md",tags:[],version:"current",frontMatter:{},sidebar:"cairo1",previous:{title:"declare",permalink:"/protostar/docs/cairo-1/testing/cheatcodes-reference/declare"},next:{title:"deploy_contract",permalink:"/protostar/docs/cairo-1/testing/cheatcodes-reference/deploy_contract"}},l={},i=[],p={toc:i};function d(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"deploy"},(0,a.kt)("inlineCode",{parentName:"h1"},"deploy")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cairo"},"fn deploy(prepared_contract: PreparedContract) -> Result::<felt252, RevertedTransaction> nopanic;\n")),(0,a.kt)("p",null,"Deploys a ",(0,a.kt)("a",{parentName:"p",href:"/protostar/docs/cairo-1/testing/cheatcodes-reference/prepare"},"prepared")," contract."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"prepared_contract")," - an object of the struct ",(0,a.kt)("inlineCode",{parentName:"li"},"PreparedContract")," that consists of the following fields:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"contract_address")," - the address of the contract calculated during contract ",(0,a.kt)("a",{parentName:"li",href:"/protostar/docs/cairo-1/testing/cheatcodes-reference/prepare"},"preparation")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"class_hash")," - class hash calculated during contract ",(0,a.kt)("a",{parentName:"li",href:"/protostar/docs/cairo-1/testing/cheatcodes-reference/declare"},"declaration")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"constructor_calldata")," - calldata for the constructor. If the constructor exists, it is called by ",(0,a.kt)("inlineCode",{parentName:"li"},"deploy"),".")))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cairo",metastring:'title="Example"',title:'"Example"'},"use array::ArrayTrait;\nuse result::ResultTrait;\n\n#[test]\nfn test_deploy() {\n    let class_hash = declare('minimal').unwrap();\n    assert(class_hash != 0, 'class_hash != 0');\n\n    let prepare_result = prepare(class_hash, @ArrayTrait::new()).unwrap();\n\n    assert(prepare_result.contract_address != 0, 'prepared contract_address != 0');\n    assert(prepare_result.class_hash != 0, 'prepared class_hash != 0');\n\n    let deployed_contract_address = deploy(prepare_result).unwrap();\n    assert(deployed_contract_address != 0, 'deployed_contract_address != 0');\n}\n")),(0,a.kt)("p",null,"You can find more\nexamples ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/software-mansion/protostar/blob/18959214d46409be8bedd92cc6427c1945b1bcc8/tests/integration/cairo1_hint_locals/deploy/deploy_test.cairo"},"here"),"."))}d.isMDXComponent=!0}}]);