"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2046],{3905:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return d}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),f=p(r),d=o,m=f["".concat(l,".").concat(d)]||f[d]||u[d]||a;return r?n.createElement(m,i(i({ref:t},s),{},{components:r})):n.createElement(m,i({ref:t},s))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=f;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var p=2;p<a;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},1872:function(e,t,r){r.r(t),r.d(t,{assets:function(){return l},contentTitle:function(){return i},default:function(){return u},frontMatter:function(){return a},metadata:function(){return c},toc:function(){return p}});var n=r(3117),o=(r(7294),r(3905));const a={sidebar_label:"Project initialization"},i="Project initialization",c={unversionedId:"legacy/project-initialization",id:"legacy/project-initialization",title:"Project initialization",description:"To create a new Protostar project, you will need to run the protostar init command followed by the name of your project. For example:",source:"@site/docs/legacy/03-project-initialization.md",sourceDirName:"legacy",slug:"/legacy/project-initialization",permalink:"/protostar/docs/legacy/project-initialization",draft:!1,editUrl:"https://github.com/software-mansion/protostar/tree/master/website/docs/legacy/03-project-initialization.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_label:"Project initialization"},sidebar:"legacy",previous:{title:"Installation",permalink:"/protostar/docs/legacy/installation"},next:{title:"Configuration file",permalink:"/protostar/docs/legacy/configuration-file"}},l={},p=[{value:"Adapting an existing project to a Protostar project",id:"adapting-an-existing-project-to-a-protostar-project",level:3}],s={toc:p};function u(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"project-initialization"},"Project initialization"),(0,o.kt)("p",null,"To create a new Protostar project, you will need to run the ",(0,o.kt)("inlineCode",{parentName:"p"},"protostar init")," command followed by the name of your project. For example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"protostar init your-project-name\n")),(0,o.kt)("p",null,"This will create a new directory with the specified name, generate a ",(0,o.kt)("a",{parentName:"p",href:"/docs/legacy/configuration-file"},"configuration file named ",(0,o.kt)("inlineCode",{parentName:"a"},"protostar.toml")),", and create example contract and test files in the ",(0,o.kt)("inlineCode",{parentName:"p"},"src")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"tests")," directories, respectively."),(0,o.kt)("p",null,"The resulting project structure will be as follows:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"your-project-name/\n\u251c\u2500\u2500 src/\n\u2502   \u2514\u2500\u2500 main.cairo\n\u251c\u2500\u2500 tests/\n\u2502   \u2514\u2500\u2500 test_main.cairo\n\u2514\u2500\u2500 protostar.toml\n")),(0,o.kt)("p",null,"The example contract file, ",(0,o.kt)("inlineCode",{parentName:"p"},"main.cairo"),", and the example test file, ",(0,o.kt)("inlineCode",{parentName:"p"},"test_main.cairo"),", serve as templates for your project."),(0,o.kt)("p",null,"The configuration file, ",(0,o.kt)("inlineCode",{parentName:"p"},"protostar.toml"),", defines the root directory of your Protostar project."),(0,o.kt)("h3",{id:"adapting-an-existing-project-to-a-protostar-project"},"Adapting an existing project to a Protostar project"),(0,o.kt)("p",null,"If you already have an existing project that you want to adapt to a Protostar project, you can do so by adding a valid ",(0,o.kt)("inlineCode",{parentName:"p"},"protostar.toml")," configuration file to the root of the project."),(0,o.kt)("p",null,"Alternatively, you can use the ",(0,o.kt)("inlineCode",{parentName:"p"},"protostar init --existing")," command to generate a ",(0,o.kt)("inlineCode",{parentName:"p"},"protostar.toml")," in your current working directory."))}u.isMDXComponent=!0}}]);