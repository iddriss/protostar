"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7452],{3905:function(e,t,r){r.d(t,{Zo:function(){return l},kt:function(){return d}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},c=Object.keys(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},l=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,c=e.originalType,s=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),f=p(r),d=a,m=f["".concat(s,".").concat(d)]||f[d]||u[d]||c;return r?n.createElement(m,o(o({ref:t},l),{},{components:r})):n.createElement(m,o({ref:t},l))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var c=r.length,o=new Array(c);o[0]=f;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var p=2;p<c;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},3510:function(e,t,r){r.r(t),r.d(t,{assets:function(){return s},contentTitle:function(){return o},default:function(){return u},frontMatter:function(){return c},metadata:function(){return i},toc:function(){return p}});var n=r(3117),a=(r(7294),r(3905));const c={},o="warp",i={unversionedId:"legacy/testing/cheatcodes/warp",id:"legacy/testing/cheatcodes/warp",title:"warp",description:"Changes a block timestamp until the returned function is called. If targetcontractaddress is specified, warp affects only the contract with the specified address. Otherwise, warp affects the current contract.",source:"@site/docs/legacy/07-testing/02-cheatcodes/warp.md",sourceDirName:"legacy/07-testing/02-cheatcodes",slug:"/legacy/testing/cheatcodes/warp",permalink:"/protostar/docs/legacy/testing/cheatcodes/warp",draft:!1,editUrl:"https://github.com/software-mansion/protostar/tree/master/website/docs/legacy/07-testing/02-cheatcodes/warp.md",tags:[],version:"current",frontMatter:{},sidebar:"legacy",previous:{title:"strategy",permalink:"/protostar/docs/legacy/testing/cheatcodes/strategy"},next:{title:"Fuzzing",permalink:"/protostar/docs/legacy/testing/fuzzing/"}},s={},p=[],l={toc:p};function u(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"warp"},(0,a.kt)("inlineCode",{parentName:"h1"},"warp")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"def warp(blk_timestamp: int, target_contract_address: Optional[int] = None) -> Callable[[], None]: ...\n")),(0,a.kt)("p",null,"Changes a block timestamp until the returned function is called. If ",(0,a.kt)("inlineCode",{parentName:"p"},"target_contract_address")," is specified, ",(0,a.kt)("inlineCode",{parentName:"p"},"warp")," affects only the contract with the specified address. Otherwise, ",(0,a.kt)("inlineCode",{parentName:"p"},"warp")," affects the current contract."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cairo",metastring:'title="Warp cheatcode changes the value returned by get_block_timestamp"',title:'"Warp',cheatcode:!0,changes:!0,the:!0,value:!0,returned:!0,by:!0,'get_block_timestamp"':!0},"%lang starknet\n\nfrom starkware.starknet.common.syscalls import get_block_timestamp\n\n@external\nfunc test_changing_timestamp{syscall_ptr: felt*}() {\n    %{ stop_warp = warp(321) %}\n    let (bt) = get_block_timestamp();\n    assert bt = 321;\n\n    %{ stop_warp() %}\n    let (bt2) = get_block_timestamp();\n    %{ assert ids.bt2 != 321 %}\n    return ();\n}\n")))}u.isMDXComponent=!0}}]);