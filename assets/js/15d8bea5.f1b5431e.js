"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8378],{3905:function(t,e,r){r.d(e,{Zo:function(){return u},kt:function(){return d}});var n=r(7294);function i(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function o(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function a(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?o(Object(r),!0).forEach((function(e){i(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function l(t,e){if(null==t)return{};var r,n,i=function(t,e){if(null==t)return{};var r,n,i={},o=Object.keys(t);for(n=0;n<o.length;n++)r=o[n],e.indexOf(r)>=0||(i[r]=t[r]);return i}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(n=0;n<o.length;n++)r=o[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(i[r]=t[r])}return i}var c=n.createContext({}),p=function(t){var e=n.useContext(c),r=e;return t&&(r="function"==typeof t?t(e):a(a({},e),t)),r},u=function(t){var e=p(t.components);return n.createElement(c.Provider,{value:e},t.children)},s={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},f=n.forwardRef((function(t,e){var r=t.components,i=t.mdxType,o=t.originalType,c=t.parentName,u=l(t,["components","mdxType","originalType","parentName"]),f=p(r),d=i,m=f["".concat(c,".").concat(d)]||f[d]||s[d]||o;return r?n.createElement(m,a(a({ref:e},u),{},{components:r})):n.createElement(m,a({ref:e},u))}));function d(t,e){var r=arguments,i=e&&e.mdxType;if("string"==typeof t||i){var o=r.length,a=new Array(o);a[0]=f;var l={};for(var c in e)hasOwnProperty.call(e,c)&&(l[c]=e[c]);l.originalType=t,l.mdxType="string"==typeof t?t:i,a[1]=l;for(var p=2;p<o;p++)a[p]=r[p];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},9509:function(t,e,r){r.r(e),r.d(e,{assets:function(){return c},contentTitle:function(){return a},default:function(){return s},frontMatter:function(){return o},metadata:function(){return l},toc:function(){return p}});var n=r(3117),i=(r(7294),r(3905));const o={sidebar_label:"Project initialization"},a="Project initialization",l={unversionedId:"tutorials/project-initialization",id:"tutorials/project-initialization",title:"Project initialization",description:"To create a new project run:",source:"@site/docs/tutorials/03-project-initialization.md",sourceDirName:"tutorials",slug:"/tutorials/project-initialization",permalink:"/protostar/docs/tutorials/project-initialization",draft:!1,editUrl:"https://github.com/software-mansion/protostar/tree/master/website/docs/tutorials/03-project-initialization.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_label:"Project initialization"},sidebar:"tutorials",previous:{title:"Installation",permalink:"/protostar/docs/tutorials/installation"},next:{title:"Configuration file",permalink:"/protostar/docs/tutorials/configuration-file"}},c={},p=[{value:"Adapting an existing project to the Protostar project",id:"adapting-an-existing-project-to-the-protostar-project",level:3}],u={toc:p};function s(t){let{components:e,...r}=t;return(0,i.kt)("wrapper",(0,n.Z)({},u,r,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"project-initialization"},"Project initialization"),(0,i.kt)("p",null,"To create a new project run:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-console"},"protostar init your-project-name\n")),(0,i.kt)("h3",{id:"adapting-an-existing-project-to-the-protostar-project"},"Adapting an existing project to the Protostar project"),(0,i.kt)("p",null,"Protostar project must be a git repository and have ",(0,i.kt)("inlineCode",{parentName:"p"},"protostar.toml")," file. You can adapt your project manually or by running ",(0,i.kt)("inlineCode",{parentName:"p"},"protostar init --existing"),"."),(0,i.kt)("h1",{id:"project-structure"},"Project structure"),(0,i.kt)("p",null,"The result of running ",(0,i.kt)("inlineCode",{parentName:"p"},"protostar init")," is a configuration file ",(0,i.kt)("inlineCode",{parentName:"p"},"protostar.toml"),", example files, and the following 3 directories:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"src")," \u2014 A directory for your code."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"lib")," \u2014 A default directory for an external dependencies."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"tests")," \u2014 A directory storing tests.")))}s.isMDXComponent=!0}}]);