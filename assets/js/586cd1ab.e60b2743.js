"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2582],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),s=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=s(e.components);return a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=s(n),m=r,k=p["".concat(c,".").concat(m)]||p[m]||u[m]||o;return n?a.createElement(k,i(i({ref:t},d),{},{components:n})):a.createElement(k,i({ref:t},d))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=p;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},4857:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return i},default:function(){return u},frontMatter:function(){return o},metadata:function(){return l},toc:function(){return s}});var a=n(3117),r=(n(7294),n(3905));const o={},i="Understanding Cairo packages",l={unversionedId:"tutorials/cairo-1-support/understanding-cairo-packages",id:"tutorials/cairo-1-support/understanding-cairo-packages",title:"Understanding Cairo packages",description:"There are several requirements that Cairo packages have to follow. These are explained in the following sections.",source:"@site/docs/tutorials/08-cairo-1-support/01-understanding-cairo-packages.md",sourceDirName:"tutorials/08-cairo-1-support",slug:"/tutorials/cairo-1-support/understanding-cairo-packages",permalink:"/protostar/docs/tutorials/cairo-1-support/understanding-cairo-packages",draft:!1,editUrl:"https://github.com/software-mansion/protostar/tree/master/website/docs/tutorials/08-cairo-1-support/01-understanding-cairo-packages.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"tutorials",previous:{title:"End-to-end tests",permalink:"/protostar/docs/tutorials/testing/e2e"},next:{title:"Project initialization",permalink:"/protostar/docs/tutorials/cairo-1-support/project-initialization"}},c={},s=[{value:"Modules",id:"modules",level:2},{value:"Packages",id:"packages",level:2},{value:"<code>cairo_project.toml</code>",id:"cairo_projecttoml",level:3},{value:"<code>lib.cairo</code>",id:"libcairo",level:3},{value:"Creating and using a new modules",id:"creating-and-using-a-new-modules",level:3},{value:"Adding a new module",id:"adding-a-new-module",level:4},{value:"Using added module",id:"using-added-module",level:4},{value:"Packages and modules names considerations",id:"packages-and-modules-names-considerations",level:2}],d={toc:s};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"understanding-cairo-packages"},"Understanding Cairo packages"),(0,r.kt)("p",null,"There are several requirements that Cairo packages have to follow. These are explained in the following sections."),(0,r.kt)("p",null,"You can refer to ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/starkware-libs/cairo/tree/main/docs/reference"},"official Cairo documentation")," for\nmore details."),(0,r.kt)("h2",{id:"modules"},"Modules"),(0,r.kt)("p",null,"A module consists of one or more Cairo files, usually organized in a single directory. To define a module, create\na ",(0,r.kt)("inlineCode",{parentName:"p"},".cairo"),"\nfile named like the module and define components of this module with the ",(0,r.kt)("inlineCode",{parentName:"p"},"mod")," keyword."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"my_module/\n\u251c\u2500\u2500 a.cairo\n\u251c\u2500\u2500 b.cairo\n\u2514\u2500\u2500 c.cairo\nmy_module.cairo\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cairo",metastring:'title="my_module.cairo"',title:'"my_module.cairo"'},"mod a;\nmod b;\nmod c;\n")),(0,r.kt)("p",null,"Alternatively, modules can be defined within a file using"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cairo",metastring:'title="my_module.cairo"',title:'"my_module.cairo"'},"mod my_module {\n    fn function_a() -> ();\n    // ...\n}\n")),(0,r.kt)("h2",{id:"packages"},"Packages"),(0,r.kt)("p",null,"Package consist of multiple modules and must define ",(0,r.kt)("inlineCode",{parentName:"p"},"cairo_project.toml")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"lib.cairo")," files."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Some other tools and resources,\nincluding ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/starkware-libs/cairo/tree/main/docs/reference"},"official Cairo documentation"),', use the\nterm "crates" for packages.')),(0,r.kt)("h3",{id:"cairo_projecttoml"},(0,r.kt)("inlineCode",{parentName:"h3"},"cairo_project.toml")),(0,r.kt)("p",null,"It is a required part of the package definition. It contains ",(0,r.kt)("inlineCode",{parentName:"p"},"[crate_roots]")," parameter, which is the path to\nthe ",(0,r.kt)("inlineCode",{parentName:"p"},"lib.cairo")," file."),(0,r.kt)("p",null,"It is good practice for the package name defined here to match the top-level directory name."),(0,r.kt)("p",null,"As an example we can define:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-toml",metastring:'title="cairo_project.toml"',title:'"cairo_project.toml"'},'[crate_roots]\nmy_package = "src"\n')),(0,r.kt)("h3",{id:"libcairo"},(0,r.kt)("inlineCode",{parentName:"h3"},"lib.cairo")),(0,r.kt)("p",null,"It is the root of the package tree. Here you can define functions, declare used modules, etc."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cairo",metastring:'title="lib.cairo"',title:'"lib.cairo"'},"mod my_module;\nmod my_other_module;\n")),(0,r.kt)("h3",{id:"creating-and-using-a-new-modules"},"Creating and using a new modules"),(0,r.kt)("p",null,"Suppose we wanted to create a module called ",(0,r.kt)("inlineCode",{parentName:"p"},"mod1")," inside the ",(0,r.kt)("inlineCode",{parentName:"p"},"hello_starknet")," package and use it in tests.\nWe want this module to only have one file ",(0,r.kt)("inlineCode",{parentName:"p"},"functions.cairo")," containing one function defined like:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cairo",metastring:'title="functions.cairo"',title:'"functions.cairo"'},"fn returns_three() -> felt252 {\n    3\n}\n")),(0,r.kt)("p",null,"Here is our initial file structure"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"my_project/\n\u2514\u2500\u2500 hello_starknet/\n    \u251c\u2500\u2500 src/\n    \u2502   \u2514\u2500\u2500 lib.cairo\n    \u2514\u2500\u2500 cairo_project.toml\n")),(0,r.kt)("h4",{id:"adding-a-new-module"},"Adding a new module"),(0,r.kt)("p",null,"Here are the steps we need to take:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Create a ",(0,r.kt)("inlineCode",{parentName:"li"},"mod1")," subdirectory inside ",(0,r.kt)("inlineCode",{parentName:"li"},"src"),"."),(0,r.kt)("li",{parentName:"ol"},"Create file ",(0,r.kt)("inlineCode",{parentName:"li"},"functions.cairo")," inside ",(0,r.kt)("inlineCode",{parentName:"li"},"mod1")," subdirectory and define your code there"),(0,r.kt)("li",{parentName:"ol"},"Create ",(0,r.kt)("inlineCode",{parentName:"li"},"mod1.cairo")," file ",(0,r.kt)("strong",{parentName:"li"},"in the ",(0,r.kt)("inlineCode",{parentName:"strong"},"src")," directory"),", with the contents of")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cairo",metastring:'title="mod1.cairo"',title:'"mod1.cairo"'},"mod functions;\n")),(0,r.kt)("ol",{start:4},(0,r.kt)("li",{parentName:"ol"},"Update the ",(0,r.kt)("inlineCode",{parentName:"li"},"lib.cairo")," file to include ",(0,r.kt)("inlineCode",{parentName:"li"},"mod1"),". It's contents should now look like this")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cairo",metastring:'title="lib.cairo"',title:'"lib.cairo"'},"// previous code stays\n// ...\nmod mod1;\n")),(0,r.kt)("p",null,"If you followed the steps correctly, your new project structure should look like this"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"my_project/\n\u2514\u2500\u2500 hello_starknet/\n    \u251c\u2500\u2500 src/\n    \u2502   \u251c\u2500\u2500 mod1/  <------------------- new directory\n    \u2502   \u2502   \u2514\u2500\u2500 functions.cairo  <----- new file\n    \u2502   \u251c\u2500\u2500 lib.cairo  <--------------- contents updated\n    \u2502   \u2514\u2500\u2500 mod.cairo\n    \u2514\u2500\u2500 cairo_project.toml\n")),(0,r.kt)("h4",{id:"using-added-module"},"Using added module"),(0,r.kt)("p",null,"You now use your function with ",(0,r.kt)("inlineCode",{parentName:"p"},"hello_starknet::mod1::functions::returns_three()"),"."),(0,r.kt)("h2",{id:"packages-and-modules-names-considerations"},"Packages and modules names considerations"),(0,r.kt)("p",null,"The names must use only ASCII alphanumeric characters or ",(0,r.kt)("inlineCode",{parentName:"p"},"_"),", and cannot be empty. Additionally, it cannot start with an\nunderscore."))}u.isMDXComponent=!0}}]);