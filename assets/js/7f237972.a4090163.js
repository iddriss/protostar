"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5286],{3905:function(t,e,r){r.d(e,{Zo:function(){return p},kt:function(){return d}});var n=r(7294);function o(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function a(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function i(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?a(Object(r),!0).forEach((function(e){o(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function c(t,e){if(null==t)return{};var r,n,o=function(t,e){if(null==t)return{};var r,n,o={},a=Object.keys(t);for(n=0;n<a.length;n++)r=a[n],e.indexOf(r)>=0||(o[r]=t[r]);return o}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(n=0;n<a.length;n++)r=a[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(o[r]=t[r])}return o}var l=n.createContext({}),s=function(t){var e=n.useContext(l),r=e;return t&&(r="function"==typeof t?t(e):i(i({},e),t)),r},p=function(t){var e=s(t.components);return n.createElement(l.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},m=n.forwardRef((function(t,e){var r=t.components,o=t.mdxType,a=t.originalType,l=t.parentName,p=c(t,["components","mdxType","originalType","parentName"]),m=s(r),d=o,f=m["".concat(l,".").concat(d)]||m[d]||u[d]||a;return r?n.createElement(f,i(i({ref:e},p),{},{components:r})):n.createElement(f,i({ref:e},p))}));function d(t,e){var r=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var a=r.length,i=new Array(a);i[0]=m;var c={};for(var l in e)hasOwnProperty.call(e,l)&&(c[l]=e[l]);c.originalType=t,c.mdxType="string"==typeof t?t:o,i[1]=c;for(var s=2;s<a;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},9366:function(t,e,r){r.r(e),r.d(e,{assets:function(){return l},contentTitle:function(){return i},default:function(){return u},frontMatter:function(){return a},metadata:function(){return c},toc:function(){return s}});var n=r(3117),o=(r(7294),r(3905));const a={sidebar_label:"Compilation"},i="Compiling a Cairo 1 Project with Protostar",c={unversionedId:"tutorials/cairo-1-support/compiling",id:"tutorials/cairo-1-support/compiling",title:"Compiling a Cairo 1 Project with Protostar",description:"To compile your Starknet contracts written in Cairo 1 using Protostar, follow these steps:",source:"@site/docs/tutorials/08-cairo-1-support/06-compiling.md",sourceDirName:"tutorials/08-cairo-1-support",slug:"/tutorials/cairo-1-support/compiling",permalink:"/protostar/docs/tutorials/cairo-1-support/compiling",draft:!1,editUrl:"https://github.com/software-mansion/protostar/tree/master/website/docs/tutorials/08-cairo-1-support/06-compiling.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_label:"Compilation"},sidebar:"tutorials",previous:{title:"Gas",permalink:"/protostar/docs/tutorials/cairo-1-support/gas"},next:{title:"Interacting With Starknet",permalink:"/protostar/docs/tutorials/cairo-1-support/interacting-with-starknet/"}},l={},s=[{value:"Output directory",id:"output-directory",level:2},{value:"External libraries",id:"external-libraries",level:2},{value:"Compiling a single contract",id:"compiling-a-single-contract",level:2}],p={toc:s};function u(t){let{components:e,...r}=t;return(0,o.kt)("wrapper",(0,n.Z)({},p,r,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"compiling-a-cairo-1-project-with-protostar"},"Compiling a Cairo 1 Project with Protostar"),(0,o.kt)("p",null,"To compile your Starknet contracts written in Cairo 1 using Protostar, follow these steps:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"/protostar/docs/tutorials/cairo-1-support/understanding-cairo-packages"},"Prepare your contracts"),"."),(0,o.kt)("li",{parentName:"ol"},"Specify the contracts in the ",(0,o.kt)("a",{parentName:"li",href:"/docs/tutorials/configuration-file"},(0,o.kt)("inlineCode",{parentName:"a"},"protostar.toml")," configuration file"),".\nEach Cairo file that contains an entrypoint function should be listed in the ",(0,o.kt)("a",{parentName:"li",href:"/docs/tutorials/configuration-file#contracts"},(0,o.kt)("inlineCode",{parentName:"a"},"contracts")," section of the configuration file"),".\nAn entrypoint is a function decorated with ",(0,o.kt)("inlineCode",{parentName:"li"},"#[external]")," or ",(0,o.kt)("inlineCode",{parentName:"li"},"#[view]"),"."),(0,o.kt)("li",{parentName:"ol"},"Run the ",(0,o.kt)("a",{parentName:"li",href:"/protostar/docs/cli-reference#build-cairo1"},(0,o.kt)("inlineCode",{parentName:"a"},"protostar build-cairo1"))," command.")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"build-cairo1")," command outputs class hash and compiled class hash if the compilation is successful."),(0,o.kt)("h2",{id:"output-directory"},"Output directory"),(0,o.kt)("p",null,"Running ",(0,o.kt)("a",{parentName:"p",href:"/protostar/docs/cli-reference#build-cairo1"},(0,o.kt)("inlineCode",{parentName:"a"},"protostar build-cairo1"))," command will generate the compiled contracts in the ",(0,o.kt)("inlineCode",{parentName:"p"},"build")," directory by default.\nYou can specify a custom output directory using the ",(0,o.kt)("a",{parentName:"p",href:"../../cli-reference#compiled-contracts-dir-pathbuild-1"},(0,o.kt)("inlineCode",{parentName:"a"},"--compiled-contracts-dir"))," argument."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"$ protostar build-cairo1 --compiled-contracts-dir out\n")),(0,o.kt)("p",null,"This will create the following files in the ",(0,o.kt)("inlineCode",{parentName:"p"},"out")," directory:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"protostar-project\n\u251c\u2500\u2500 src\n\u2502   \u251c\u2500\u2500 main.cairo\n\u2502   \u2514\u2500\u2500 proxy.cairo\n\u251c\u2500\u2500 out\n\u2502   \u251c\u2500\u2500 main.casm.json\n\u2502   \u251c\u2500\u2500 main.sierra.json\n\u2502   \u251c\u2500\u2500 main.class.hash\n\u2502   \u251c\u2500\u2500 main.compiled.class.hash\n\u2502   \u251c\u2500\u2500 proxy.casm.json\n\u2502   \u251c\u2500\u2500 proxy.sierra.json\n\u2502   \u251c\u2500\u2500 proxy.class.hash\n\u2502   \u251c\u2500\u2500 proxy.compiled.class.hash\n\u2514\u2500\u2500 protostar.toml\n")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},".sierra.json")," files contain contracts compiled to the sierra format which allows provable reverted transactions. Read more about sierra ",(0,o.kt)("a",{parentName:"p",href:"https://docs.starknet.io/documentation/architecture_and_concepts/Contracts/cairo-1-and-sierra"},"here"),"."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},".casm.json")," files contain contracts compiled to the casm format which can be executed on the virtual machine."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},".class.hash")," files contain class hash of the built contract"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},".compiled.class.hash")," files contain compiled class hash of the built contract"),(0,o.kt)("h2",{id:"external-libraries"},"External libraries"),(0,o.kt)("p",null,"If you want to attach external libraries to the build, you can specify additional paths that will be searched for the cairo libraries (library is just a cairo ",(0,o.kt)("a",{parentName:"p",href:"/protostar/docs/tutorials/cairo-1-support/understanding-cairo-packages"},"package"),"). To do that, you need to use the ",(0,o.kt)("a",{parentName:"p",href:"/protostar/docs/cli-reference#linked-libraries-path"},(0,o.kt)("inlineCode",{parentName:"a"},"--linked-libraries"))," argument like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"$ protostar build-cairo1 --linked-libraries /path/to/the/external/lib\n")),(0,o.kt)("p",null,"Please note, that specified directories have to contain properly prepared libraries, otherwise an error will be raised."),(0,o.kt)("h2",{id:"compiling-a-single-contract"},"Compiling a single contract"),(0,o.kt)("p",null,"If you wish to compile only one contract, you can use the ",(0,o.kt)("a",{parentName:"p",href:"/protostar/docs/cli-reference#contract-name-string-1"},(0,o.kt)("inlineCode",{parentName:"a"},"--contract-name"))," argument:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"$ protostar build-cairo1 --contract-name my_contract\n")),(0,o.kt)("p",null,"In such a case, if your ",(0,o.kt)("inlineCode",{parentName:"p"},"protostar.toml")," looks like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'[contracts]\nmain = ["src/main.cairo"]\nproxy = ["src/proxy.cairo"]\nmy_contract = ["src/my_contract.cairo"]\n')),(0,o.kt)("p",null,"only the contract called ",(0,o.kt)("inlineCode",{parentName:"p"},"my_contract")," will be compiled."))}u.isMDXComponent=!0}}]);