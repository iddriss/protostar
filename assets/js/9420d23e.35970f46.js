"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8356],{3905:function(t,e,n){n.d(e,{Zo:function(){return s},kt:function(){return m}});var a=n(7294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function c(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function i(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},o=Object.keys(t);for(a=0;a<o.length;a++)n=o[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(a=0;a<o.length;a++)n=o[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var l=a.createContext({}),p=function(t){var e=a.useContext(l),n=e;return t&&(n="function"==typeof t?t(e):c(c({},e),t)),n},s=function(t){var e=p(t.components);return a.createElement(l.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},d=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,o=t.originalType,l=t.parentName,s=i(t,["components","mdxType","originalType","parentName"]),d=p(n),m=r,k=d["".concat(l,".").concat(m)]||d[m]||u[m]||o;return n?a.createElement(k,c(c({ref:e},s),{},{components:n})):a.createElement(k,c({ref:e},s))}));function m(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var o=n.length,c=new Array(o);c[0]=d;var i={};for(var l in e)hasOwnProperty.call(e,l)&&(i[l]=e[l]);i.originalType=t,i.mdxType="string"==typeof t?t:r,c[1]=i;for(var p=2;p<o;p++)c[p]=n[p];return a.createElement.apply(null,c)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5646:function(t,e,n){n.r(e),n.d(e,{assets:function(){return l},contentTitle:function(){return c},default:function(){return u},frontMatter:function(){return o},metadata:function(){return i},toc:function(){return p}});var a=n(3117),r=(n(7294),n(3905));const o={},c="Creating account",i={unversionedId:"legacy/interacting-with-starknet/deploy-account",id:"legacy/interacting-with-starknet/deploy-account",title:"Creating account",description:"Overview",source:"@site/docs/legacy/09-interacting-with-starknet/05-deploy-account.md",sourceDirName:"legacy/09-interacting-with-starknet",slug:"/legacy/interacting-with-starknet/deploy-account",permalink:"/protostar/docs/legacy/interacting-with-starknet/deploy-account",draft:!1,editUrl:"https://github.com/software-mansion/protostar/tree/master/website/docs/legacy/09-interacting-with-starknet/05-deploy-account.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{},sidebar:"legacy",previous:{title:"Deploying new contracts",permalink:"/protostar/docs/legacy/interacting-with-starknet/deploy"},next:{title:"Signing",permalink:"/protostar/docs/legacy/interacting-with-starknet/signing"}},l={},p=[{value:"Overview",id:"overview",level:2},{value:"Sending <code>DEPLOY_ACCOUNT</code> transaction",id:"sending-deploy_account-transaction",level:2}],s={toc:p};function u(t){let{components:e,...n}=t;return(0,r.kt)("wrapper",(0,a.Z)({},s,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"creating-account"},"Creating account"),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("p",null,"In order to create a new account, you need to deploy an account contract. Starknet expects a certain interface from an account contract. ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/OpenZeppelin/cairo-contracts/blob/main/src/openzeppelin/account/presets/Account.cairo"},"OpenZeppelin")," and ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/argentlabs/argent-contracts-starknet/blob/develop/contracts/account/ArgentAccount.cairo"},"ArgentX")," provide account contract implementations that you can use."),(0,r.kt)("p",null,"There are three ways of deploying a new account contract:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"sending ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/starkware-libs/cairo-lang/releases/tag/v0.10.1"},(0,r.kt)("inlineCode",{parentName:"a"},"DEPLOY_ACCOUNT")," transaction")),(0,r.kt)("li",{parentName:"ul"},"using already deployed account contract and deploying new one via ",(0,r.kt)("a",{parentName:"li",href:"https://community.starknet.io/t/universal-deployer-contract-proposal/1864"},"the Universal Deployer Contract")),(0,r.kt)("li",{parentName:"ul"},"(deprecated) sending ",(0,r.kt)("a",{parentName:"li",href:"https://docs.starknet.io/documentation/develop/Blocks/transactions/#deploy_transaction"},(0,r.kt)("inlineCode",{parentName:"a"},"DEPLOY")," transaction"))),(0,r.kt)("h2",{id:"sending-deploy_account-transaction"},"Sending ",(0,r.kt)("inlineCode",{parentName:"h2"},"DEPLOY_ACCOUNT")," transaction"),(0,r.kt)("p",null,"Protostar allows you to send the ",(0,r.kt)("inlineCode",{parentName:"p"},"DEPLOY_ACCOUNT")," transaction from the CLI by calling the ",(0,r.kt)("a",{parentName:"p",href:"/docs/cli-reference#deploy-account"},(0,r.kt)("inlineCode",{parentName:"a"},"deploy-account")," command"),".\nHowever, before you send such transaction you need to:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Find the class hash of the account contract compatible with ",(0,r.kt)("inlineCode",{parentName:"p"},"DEPLOY_ACCOUNT")," transaction. The entity that declared the account contract should make the class hash easily available. It's recommended to check the README.md in the repository with the source of the account contract:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/OpenZeppelin/cairo-contracts"},"OpenZeppelin/cairo-contracts")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/argentlabs/argent-contracts-starknet"},"argentlabs/argent-contracts-starknet")))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Calculate an account contract address with ",(0,r.kt)("a",{parentName:"p",href:"/docs/cli-reference#calculate-account-address"},(0,r.kt)("inlineCode",{parentName:"a"},"protostar calculate-account-address")," command"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Prefund the account contract."),(0,r.kt)("table",{parentName:"li"},(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Network"),(0,r.kt)("th",{parentName:"tr",align:null},"Recommended method"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"devnet"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://shard-labs.github.io/starknet-devnet/docs/guide/mint-token"},"Local Faucet"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"testnet"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://faucet.goerli.starknet.io/"},"Starknet Faucet"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"mainnet"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://docs.starknet.io/documentation/develop/L1-L2_Communication/token-bridge/"},"Token Bridge"))))))))}u.isMDXComponent=!0}}]);