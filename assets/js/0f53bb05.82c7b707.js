"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8378],{3905:function(t,e,n){n.d(e,{Zo:function(){return u},kt:function(){return h}});var a=n(7294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function c(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function i(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},o=Object.keys(t);for(a=0;a<o.length;a++)n=o[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(a=0;a<o.length;a++)n=o[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var s=a.createContext({}),l=function(t){var e=a.useContext(s),n=e;return t&&(n="function"==typeof t?t(e):c(c({},e),t)),n},u=function(t){var e=l(t.components);return a.createElement(s.Provider,{value:e},t.children)},p={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},d=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,o=t.originalType,s=t.parentName,u=i(t,["components","mdxType","originalType","parentName"]),d=l(n),h=r,m=d["".concat(s,".").concat(h)]||d[h]||p[h]||o;return n?a.createElement(m,c(c({ref:e},u),{},{components:n})):a.createElement(m,c({ref:e},u))}));function h(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var o=n.length,c=new Array(o);c[0]=d;var i={};for(var s in e)hasOwnProperty.call(e,s)&&(i[s]=e[s]);i.originalType=t,i.mdxType="string"==typeof t?t:r,c[1]=i;for(var l=2;l<o;l++)c[l]=n[l];return a.createElement.apply(null,c)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3859:function(t,e,n){n.r(e),n.d(e,{assets:function(){return s},contentTitle:function(){return c},default:function(){return p},frontMatter:function(){return o},metadata:function(){return i},toc:function(){return l}});var a=n(3117),r=(n(7294),n(3905));const o={},c="Creating an account through protostar",i={unversionedId:"cairo-1/interacting-with-starknet/deploy-account",id:"cairo-1/interacting-with-starknet/deploy-account",title:"Creating an account through protostar",description:"Overview",source:"@site/docs/cairo-1/06-interacting-with-starknet/05-deploy-account.md",sourceDirName:"cairo-1/06-interacting-with-starknet",slug:"/cairo-1/interacting-with-starknet/deploy-account",permalink:"/protostar/docs/cairo-1/interacting-with-starknet/deploy-account",draft:!1,editUrl:"https://github.com/software-mansion/protostar/tree/master/website/docs/cairo-1/06-interacting-with-starknet/05-deploy-account.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{},sidebar:"cairo1",previous:{title:"Calling contracts",permalink:"/protostar/docs/cairo-1/interacting-with-starknet/call"},next:{title:"Multicall",permalink:"/protostar/docs/cairo-1/interacting-with-starknet/multicall"}},s={},l=[{value:"Overview",id:"overview",level:2},{value:"Sending <code>DEPLOY_ACCOUNT</code> transaction",id:"sending-deploy_account-transaction",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Precalculating the address",id:"precalculating-the-address",level:3},{value:"Prefund the calculated address",id:"prefund-the-calculated-address",level:3},{value:"Deploy the account",id:"deploy-the-account",level:3}],u={toc:l};function p(t){let{components:e,...n}=t;return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"creating-an-account-through-protostar"},"Creating an account through protostar"),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("p",null,"In order to create a new account, you need to deploy an account\ncontract."),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Instead of manually deploying an account through Protostar, you can consider using\na ",(0,r.kt)("a",{parentName:"p",href:"https://www.starknet.io/en/ecosystem/wallets"},"wallet provider"),". Please note that the Protostar team doesn't verify\nsafety or compatibility of these wallets.")),(0,r.kt)("p",null,"There are multiple account contracts to choose from, and it is the end user responsibility to find an account that works\nfor them. Some examples of already existing account contracts\nare ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/OpenZeppelin/cairo-contracts/blob/main/src/openzeppelin/account/presets/Account.cairo"},"OpenZeppelin"),"\nand ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/argentlabs/argent-contracts-starknet/blob/develop/contracts/account/ArgentAccount.cairo"},"ArgentX"),"."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"You can read more about accounts in\nStarknet ",(0,r.kt)("a",{parentName:"p",href:"https://docs.starknet.io/documentation/architecture_and_concepts/Account_Abstraction/introduction/"},"here"),".")),(0,r.kt)("p",null,"There are two ways of deploying a new account contract:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"sending ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/starkware-libs/cairo-lang/releases/tag/v0.10.1"},(0,r.kt)("inlineCode",{parentName:"a"},"DEPLOY_ACCOUNT")," transaction")),(0,r.kt)("li",{parentName:"ul"},"using already deployed account contract and deploying new one\nvia ",(0,r.kt)("a",{parentName:"li",href:"https://docs.openzeppelin.com/contracts-cairo/0.6.1/udc"},"the Universal Deployer Contract"))),(0,r.kt)("p",null,"If you do not have access to any existing account on Starknet, you will most likely have to use the ",(0,r.kt)("inlineCode",{parentName:"p"},"DEPLOY_ACCOUNT"),"\ntransaction."),(0,r.kt)("h2",{id:"sending-deploy_account-transaction"},"Sending ",(0,r.kt)("inlineCode",{parentName:"h2"},"DEPLOY_ACCOUNT")," transaction"),(0,r.kt)("p",null,"Protostar supports\nsending ",(0,r.kt)("a",{parentName:"p",href:"https://docs.starknet.io/documentation/architecture_and_concepts/Account_Abstraction/deploying_new_accounts/"},(0,r.kt)("inlineCode",{parentName:"a"},"DEPLOY_ACCOUNT")),"\ntransactions."),(0,r.kt)("h3",{id:"prerequisites"},"Prerequisites"),(0,r.kt)("p",null,"You must know a ",(0,r.kt)("inlineCode",{parentName:"p"},"class_hash")," of already ",(0,r.kt)("a",{parentName:"p",href:"/protostar/docs/cairo-1/interacting-with-starknet/declare"},"declared")," account contract. It will be used to create an\ninstance of your account."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Contract used for ",(0,r.kt)("inlineCode",{parentName:"p"},"DEPLOY_ACCOUNT")," transaction define ",(0,r.kt)("inlineCode",{parentName:"p"},"__validate_deploy__")," entrypoint to support creation\nthrough ",(0,r.kt)("inlineCode",{parentName:"p"},"DEPLOY_ACCOUNT")," transaction.")),(0,r.kt)("h3",{id:"precalculating-the-address"},"Precalculating the address"),(0,r.kt)("p",null,"First, calculate the address of the account you will be deploying\nusing ",(0,r.kt)("a",{parentName:"p",href:"/docs/cli-reference#calculate-account-address"},(0,r.kt)("inlineCode",{parentName:"a"},"protostar calculate-account-address")," command"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="Example"',title:'"Example"'},"protostar calculate-account-address \\\n  --account-address-salt .. \\ # provide a valid integer for salt\n  --account-class-hash 0x1234 \\\n  --account-constructor-input 1 2 3 4  \nAddress: 0x1234   \n")),(0,r.kt)("p",null,"Depending on your account contract used, input expected by the constructor will vary."),(0,r.kt)("h3",{id:"prefund-the-calculated-address"},"Prefund the calculated address"),(0,r.kt)("p",null,"Transfer enough funds to the calculated address to cover the cost of ",(0,r.kt)("inlineCode",{parentName:"p"},"DEPLOY_ACCOUNT")," transaction."),(0,r.kt)("p",null,"For Starknet testnet you can use ",(0,r.kt)("a",{parentName:"p",href:"https://faucet.goerli.starknet.io/"},"this faucet")," to obtain testnet ETH.\nFor mainnet, you will have to bridge enough tokens from other networks.\nSee ",(0,r.kt)("a",{parentName:"p",href:"https://docs.starknet.io/documentation/architecture_and_concepts/L1-L2_Communication/token-bridge/"},"token bridges"),"\nfor more details."),(0,r.kt)("h3",{id:"deploy-the-account"},"Deploy the account"),(0,r.kt)("p",null,"Once funds has been transferred to the address, run ",(0,r.kt)("inlineCode",{parentName:"p"},"protostar deploy-account")," command."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="Example"',title:'"Example"'},"protostar deploy-account \\\n  --account-address-salt .. \\ # provide a valid integer for salt\n  --account-class-hash 0x1234 \\\n  --account-constructor-input 1 2 3 4 \\\n  --network testnet \\\n  --max-fee 10 \\ # provide a valid max-fee in WEI \n  --private-key-path ./.pkey\nTransaction hash: 0x060e83c1de4e6ec2cec20239943fd19402f4e23cc88c62afed63f63f6fad4063\n")),(0,r.kt)("p",null,"Once the transaction gets accepted, your account will be available to use at the address you calculated\nin ",(0,r.kt)("a",{parentName:"p",href:"#precalculating-the-address"},"previous step")," using the credentials you provided when sending the transaction."))}p.isMDXComponent=!0}}]);