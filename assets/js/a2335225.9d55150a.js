"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5958],{3905:function(t,e,r){r.d(e,{Zo:function(){return s},kt:function(){return d}});var n=r(7294);function o(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function a(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function i(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?a(Object(r),!0).forEach((function(e){o(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function c(t,e){if(null==t)return{};var r,n,o=function(t,e){if(null==t)return{};var r,n,o={},a=Object.keys(t);for(n=0;n<a.length;n++)r=a[n],e.indexOf(r)>=0||(o[r]=t[r]);return o}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(n=0;n<a.length;n++)r=a[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(o[r]=t[r])}return o}var l=n.createContext({}),p=function(t){var e=n.useContext(l),r=e;return t&&(r="function"==typeof t?t(e):i(i({},e),t)),r},s=function(t){var e=p(t.components);return n.createElement(l.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},m=n.forwardRef((function(t,e){var r=t.components,o=t.mdxType,a=t.originalType,l=t.parentName,s=c(t,["components","mdxType","originalType","parentName"]),m=p(r),d=o,f=m["".concat(l,".").concat(d)]||m[d]||u[d]||a;return r?n.createElement(f,i(i({ref:e},s),{},{components:r})):n.createElement(f,i({ref:e},s))}));function d(t,e){var r=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var a=r.length,i=new Array(a);i[0]=m;var c={};for(var l in e)hasOwnProperty.call(e,l)&&(c[l]=e[l]);c.originalType=t,c.mdxType="string"==typeof t?t:o,i[1]=c;for(var p=2;p<a;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},6860:function(t,e,r){r.r(e),r.d(e,{assets:function(){return l},contentTitle:function(){return i},default:function(){return u},frontMatter:function(){return a},metadata:function(){return c},toc:function(){return p}});var n=r(3117),o=(r(7294),r(3905));const a={sidebar_label:"Compilation"},i="Compiling a Cairo 1 Project with Protostar",c={unversionedId:"cairo-1/interacting-with-starknet/compiling",id:"cairo-1/interacting-with-starknet/compiling",title:"Compiling a Cairo 1 Project with Protostar",description:"To build your contracts, first define them in protostar.toml",source:"@site/docs/cairo-1/07-interacting-with-starknet/09-compiling.md",sourceDirName:"cairo-1/07-interacting-with-starknet",slug:"/cairo-1/interacting-with-starknet/compiling",permalink:"/protostar/docs/cairo-1/interacting-with-starknet/compiling",draft:!1,editUrl:"https://github.com/software-mansion/protostar/tree/master/website/docs/cairo-1/07-interacting-with-starknet/09-compiling.md",tags:[],version:"current",sidebarPosition:9,frontMatter:{sidebar_label:"Compilation"},sidebar:"cairo1",previous:{title:"Scripting",permalink:"/protostar/docs/cairo-1/interacting-with-starknet/scripting"}},l={},p=[{value:"Output directory",id:"output-directory",level:2},{value:"Compiling a single contract",id:"compiling-a-single-contract",level:2}],s={toc:p};function u(t){let{components:e,...r}=t;return(0,o.kt)("wrapper",(0,n.Z)({},s,r,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"compiling-a-cairo-1-project-with-protostar"},"Compiling a Cairo 1 Project with Protostar"),(0,o.kt)("p",null,"To build your contracts, first define them in ",(0,o.kt)("a",{parentName:"p",href:"/protostar/docs/cairo-1/protostar-toml#contracts-section"},(0,o.kt)("inlineCode",{parentName:"a"},"protostar.toml"))),(0,o.kt)("p",null,"To build run"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="build"',title:'"build"'},"protostar build\n")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/protostar/docs/cli-reference#build"},"Check CLI reference")," for more details."),(0,o.kt)("h2",{id:"output-directory"},"Output directory"),(0,o.kt)("p",null,"Running ",(0,o.kt)("a",{parentName:"p",href:"/protostar/docs/cli-reference#build"},(0,o.kt)("inlineCode",{parentName:"a"},"protostar build"))," command will generate the compiled contracts in\nthe ",(0,o.kt)("inlineCode",{parentName:"p"},"build")," directory by default.\nYou can specify a custom output directory using\nthe ",(0,o.kt)("a",{parentName:"p",href:"../../cli-reference#compiled-contracts-dir-pathbuild-1"},(0,o.kt)("inlineCode",{parentName:"a"},"--compiled-contracts-dir"))," argument."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="Example"',title:'"Example"'},"$ protostar build --compiled-contracts-dir out\n")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},".sierra.json")," files contain contracts compiled to the sierra format. This format is used to declare contracts on\nStarknet.\nRead more about\nsierra ",(0,o.kt)("a",{parentName:"p",href:"https://docs.starknet.io/documentation/architecture_and_concepts/Contracts/cairo-1-and-sierra"},"here"),"."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},".casm.json")," files contain contracts compiled to the casm format which can be executed on the Cairo Virtual Machine. This\nformat is used to calculate ",(0,o.kt)("inlineCode",{parentName:"p"},"compiled_class_hash")," of a contract."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},".class_hash")," files contain class hash of the built contract"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},".compiled_class_hash")," files contain compiled class hash of the built contract"),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"If you need to print machine-readable output in JSON format, you should use ",(0,o.kt)("inlineCode",{parentName:"p"},"--json")," flag.")),(0,o.kt)("h2",{id:"compiling-a-single-contract"},"Compiling a single contract"),(0,o.kt)("p",null,"If your ",(0,o.kt)("inlineCode",{parentName:"p"},"protostar.toml")," file defines multiple contracts, and you wish to compile only one of them, you can specify\nthe ",(0,o.kt)("a",{parentName:"p",href:"/protostar/docs/cli-reference#--contract-name-string-1"},(0,o.kt)("inlineCode",{parentName:"a"},"--contract-name"))," argument:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"$ protostar build --contract-name my_contract\n")))}u.isMDXComponent=!0}}]);