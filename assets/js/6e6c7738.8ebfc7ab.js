"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7650],{3905:function(t,e,n){n.d(e,{Zo:function(){return s},kt:function(){return m}});var r=n(7294);function o(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function a(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?a(Object(n),!0).forEach((function(e){o(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function c(t,e){if(null==t)return{};var n,r,o=function(t,e){if(null==t)return{};var n,r,o={},a=Object.keys(t);for(r=0;r<a.length;r++)n=a[r],e.indexOf(n)>=0||(o[n]=t[n]);return o}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(r=0;r<a.length;r++)n=a[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(o[n]=t[n])}return o}var l=r.createContext({}),p=function(t){var e=r.useContext(l),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},s=function(t){var e=p(t.components);return r.createElement(l.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},d=r.forwardRef((function(t,e){var n=t.components,o=t.mdxType,a=t.originalType,l=t.parentName,s=c(t,["components","mdxType","originalType","parentName"]),d=p(n),m=o,f=d["".concat(l,".").concat(m)]||d[m]||u[m]||a;return n?r.createElement(f,i(i({ref:e},s),{},{components:n})):r.createElement(f,i({ref:e},s))}));function m(t,e){var n=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var a=n.length,i=new Array(a);i[0]=d;var c={};for(var l in e)hasOwnProperty.call(e,l)&&(c[l]=e[l]);c.originalType=t,c.mdxType="string"==typeof t?t:o,i[1]=c;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2214:function(t,e,n){n.r(e),n.d(e,{assets:function(){return l},contentTitle:function(){return i},default:function(){return u},frontMatter:function(){return a},metadata:function(){return c},toc:function(){return p}});var r=n(3117),o=(n(7294),n(3905));const a={},i="deploy_contract",c={unversionedId:"tutorials/deploying/migrations/deploy-contract",id:"tutorials/deploying/migrations/deploy-contract",title:"deploy_contract",description:"This cheatcode will be removed once StarkNet drops support for deploy transaction.",source:"@site/docs/tutorials/08-deploying/02-migrations/deploy-contract.md",sourceDirName:"tutorials/08-deploying/02-migrations",slug:"/tutorials/deploying/migrations/deploy-contract",permalink:"/protostar/docs/tutorials/deploying/migrations/deploy-contract",draft:!1,editUrl:"https://github.com/software-mansion/protostar/tree/master/website/docs/tutorials/08-deploying/02-migrations/deploy-contract.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorials",previous:{title:"declare",permalink:"/protostar/docs/tutorials/deploying/migrations/declare"},next:{title:"invoke",permalink:"/protostar/docs/tutorials/deploying/migrations/invoke"}},l={},p=[{value:"Example",id:"example",level:2}],s={toc:p};function u(t){let{components:e,...n}=t;return(0,o.kt)("wrapper",(0,r.Z)({},s,n,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"deploy_contract"},(0,o.kt)("inlineCode",{parentName:"h1"},"deploy_contract")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"def deploy_contract(\n    self,\n    contract: str,\n    constructor_args: list[int] | dict[str, Any] | None = None,\n    *,\n    config: Optional[CheatcodeNetworkConfig] = None\n) -> DeployedContract: ...\n\n@dataclass(frozen=True)\nclass DeployedContract:\n    contract_address: int\n")),(0,o.kt)("admonition",{type:"warning"},(0,o.kt)("p",{parentName:"admonition"},"This cheatcode will be removed once ",(0,o.kt)("a",{parentName:"p",href:"https://docs.starknet.io/documentation/develop/Blocks/transactions/#deploy_transaction"},"StarkNet drops support for deploy transaction"),".  ")),(0,o.kt)("p",null,"Deploys a contract to the network."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"contract")," \u2014 A path to the ",(0,o.kt)("strong",{parentName:"li"},"compiled")," contract or a ",(0,o.kt)("a",{parentName:"li",href:"../../compiling#contract-name"},"contract name"),". If you provide a contract name, Protostar will look for it in the ",(0,o.kt)("a",{parentName:"li",href:"/protostar/docs/cli-reference#--compiled-contracts-dir-pathbuild"},"compiled-contracts-dir"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"constructor_args")," \u2014 Arguments to the constructor. It can be either a list of felts or a dictionary. To use ",(0,o.kt)("a",{parentName:"li",href:"../../testing/cheatcodes#data-transformer"},"data transformer"),", provide a dictionary."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"config")," \u2014 A keyword only argument that allows passing ",(0,o.kt)("a",{parentName:"li",href:"/protostar/docs/tutorials/deploying/network-config"},"network configuration"),".")),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cairo"},'%lang starknet\n\n@external\nfunc up() {\n    %{ deploy_contract("main", config={"wait_for_acceptance": True}) %}\n\n    return ();\n}\n')))}u.isMDXComponent=!0}}]);