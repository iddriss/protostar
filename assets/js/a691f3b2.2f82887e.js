"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[354],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return f}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=l(n),f=a,g=u["".concat(c,".").concat(f)]||u[f]||d[f]||o;return n?r.createElement(g,s(s({ref:t},p),{},{components:n})):r.createElement(g,s({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=u;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var l=2;l<o;l++)s[l]=n[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},4245:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return o},metadata:function(){return i},toc:function(){return l}});var r=n(3117),a=(n(7294),n(3905));const o={},s="End-to-end tests",i={unversionedId:"legacy/testing/e2e",id:"legacy/testing/e2e",title:"End-to-end tests",description:"There are three main levels of software testing: unit tests, integration tests and end-to-end tests.",source:"@site/docs/legacy/07-testing/04-e2e.md",sourceDirName:"legacy/07-testing",slug:"/legacy/testing/e2e",permalink:"/protostar/docs/legacy/testing/e2e",draft:!1,editUrl:"https://github.com/software-mansion/protostar/tree/master/website/docs/legacy/07-testing/04-e2e.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{},sidebar:"legacy",previous:{title:"Strategies",permalink:"/protostar/docs/legacy/testing/fuzzing/strategies"},next:{title:"README",permalink:"/protostar/docs/legacy/interacting-with-starknet/"}},c={},l=[{value:"Recommended approach",id:"recommended-approach",level:2},{value:"Testing standalone contracts",id:"testing-standalone-contracts",level:3}],p={toc:l};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"end-to-end-tests"},"End-to-end tests"),(0,a.kt)("p",null,"There are three main levels of software testing: unit tests, integration tests and end-to-end tests."),(0,a.kt)("p",null,"Protostar provides an environment to write unit tests for Starknet smart contracts\nin Cairo language itself.\nWith the help of cheatcodes like ",(0,a.kt)("a",{parentName:"p",href:"/protostar/docs/legacy/testing/cheatcodes/deploy-contract"},(0,a.kt)("inlineCode",{parentName:"a"},"deploy_contract"))," it is also easy to write integration tests,\ndeploying single or multiple contracts and examining internal behaviour of such small systems."),(0,a.kt)("h2",{id:"recommended-approach"},"Recommended approach"),(0,a.kt)("p",null,"In end-to-end testing, the goal is to examine interactions not only within a system of contracts\ndeployed on the blockchain, but also to examine interactions triggered by external services,\nlike web frontends, and observing effects happening within these services themselves."),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"As an example, an end-to-end test of a voting application could trigger a click on a ",(0,a.kt)("em",{parentName:"p"},"Vote")," button,\ncausing a transaction being executed on the blockchain.\nThe test waits for the transaction to be accepted, then examines changes of the publicly available\nstate of voting contract, e.g. the final result of the voting.")),(0,a.kt)("p",null,"End-to-end testing should focus on the bigger picture of the whole system,\nnot only the smart contracts.\nModifications and readings of the on-chain state should be done through exposed interfaces\nof contracts.\nTherefore, it is recommended to include end-to-end tests in test suites of client applications,\nimplemented in their technologies.\nThe following tools are suggested to set up the described testing environment:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("a",{parentName:"li",href:"https://shard-labs.github.io/starknet-devnet/"},"Starknet Devnet")," for running a local Starknet network,"),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("a",{parentName:"li",href:"https://starknet.io/building-on-starknet/developer-tools/#libraries"},"Starknet SDKs")," like ",(0,a.kt)("a",{parentName:"li",href:"https://www.starknetjs.com/"},"Starknet.js")," or ",(0,a.kt)("a",{parentName:"li",href:"https://starknetpy.rtfd.io/"},"Starknet.py")," for ",(0,a.kt)("a",{parentName:"li",href:"/protostar/docs/legacy/interacting-with-starknet/"},"interacting with Starknet")," from tests'\ncode,"),(0,a.kt)("li",{parentName:"ol"},"Protostar CLI for ",(0,a.kt)("a",{parentName:"li",href:"/protostar/docs/legacy/compiling#compiling-your-project"},"building contracts")," and ",(0,a.kt)("a",{parentName:"li",href:"/protostar/docs/legacy/interacting-with-starknet/"},"deploying")," in tests'\nsetup phases and CI.")),(0,a.kt)("h3",{id:"testing-standalone-contracts"},"Testing standalone contracts"),(0,a.kt)("p",null,"In case the smart contracts are standalone and supposed to be used by independent clients,\none could write the test suite as an independent project using SDKs in general purpose languages,\nfor example, in ",(0,a.kt)("a",{parentName:"p",href:"https://jestjs.io/"},"Jest")," and ",(0,a.kt)("a",{parentName:"p",href:"https://www.starknetjs.com/"},"Starknet.js")," or ",(0,a.kt)("a",{parentName:"p",href:"https://pytest.org/"},"pytest")," and ",(0,a.kt)("a",{parentName:"p",href:"https://starknetpy.rtfd.io/"},"Starknet.py"),"."))}d.isMDXComponent=!0}}]);