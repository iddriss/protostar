"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6131],{3905:function(e,t,r){r.d(t,{Zo:function(){return l},kt:function(){return g}});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},l=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,l=u(e,["components","mdxType","originalType","parentName"]),f=s(r),g=i,d=f["".concat(c,".").concat(g)]||f[g]||p[g]||o;return r?n.createElement(d,a(a({ref:t},l),{},{components:r})):n.createElement(d,a({ref:t},l))}));function g(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=f;var u={};for(var c in t)hasOwnProperty.call(t,c)&&(u[c]=t[c]);u.originalType=e,u.mdxType="string"==typeof e?e:i,a[1]=u;for(var s=2;s<o;s++)a[s]=r[s];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},286:function(e,t,r){r.r(t),r.d(t,{assets:function(){return c},contentTitle:function(){return a},default:function(){return p},frontMatter:function(){return o},metadata:function(){return u},toc:function(){return s}});var n=r(3117),i=(r(7294),r(3905));const o={},a="Reproducing failures",u={unversionedId:"legacy/testing/fuzzing/reproducing-failures",id:"legacy/testing/fuzzing/reproducing-failures",title:"Reproducing failures",description:"An important aspect of developing code with a fuzz testing suite, is how to reproduce failing test",source:"@site/docs/legacy/07-testing/03-fuzzing/reproducing-failures.md",sourceDirName:"legacy/07-testing/03-fuzzing",slug:"/legacy/testing/fuzzing/reproducing-failures",permalink:"/protostar/docs/legacy/testing/fuzzing/reproducing-failures",draft:!1,editUrl:"https://github.com/software-mansion/protostar/tree/master/website/docs/legacy/07-testing/03-fuzzing/reproducing-failures.md",tags:[],version:"current",frontMatter:{},sidebar:"legacy",previous:{title:"Fuzzing",permalink:"/protostar/docs/legacy/testing/fuzzing/"},next:{title:"Strategies",permalink:"/protostar/docs/legacy/testing/fuzzing/strategies"}},c={},s=[{value:"Reproducing a test run with seed",id:"reproducing-a-test-run-with-seed",level:2}],l={toc:s};function p(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"reproducing-failures"},"Reproducing failures"),(0,i.kt)("p",null,"An important aspect of developing code with a fuzz testing suite, is how to reproduce failing test\ncases.\nAs for now, Protostar provides one mean of achieving this."),(0,i.kt)("h2",{id:"reproducing-a-test-run-with-seed"},"Reproducing a test run with seed"),(0,i.kt)("p",null,"Protostar prints a numeric seed of a pseudo-random number generator used as a source of generated\nexamples:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"17:15:36 [INFO] Test suites: 1 failed, 1 total            \n17:15:36 [INFO] Tests:       1 failed, 1 total\n17:15:36 [INFO] Seed:        3658430058\n")),(0,i.kt)("p",null,"You can then recreate examples with\nthe ",(0,i.kt)("a",{parentName:"p",href:"/protostar/docs/cli-reference#--seed-int"},(0,i.kt)("inlineCode",{parentName:"a"},"--seed")," CLI flag"),"."))}p.isMDXComponent=!0}}]);