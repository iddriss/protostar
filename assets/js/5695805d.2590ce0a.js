"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2758],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=l(n),m=a,f=u["".concat(s,".").concat(m)]||u[m]||d[m]||o;return n?r.createElement(f,i(i({ref:t},p),{},{components:n})):r.createElement(f,i({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},2776:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return i},default:function(){return d},frontMatter:function(){return o},metadata:function(){return c},toc:function(){return l}});var r=n(3117),a=(n(7294),n(3905));const o={},i="Declaring new contracts",c={unversionedId:"cairo-1/interacting-with-starknet/declare",id:"cairo-1/interacting-with-starknet/declare",title:"Declaring new contracts",description:"Starknet provides a distinction between contract class and instance. This is similar to difference between writing the",source:"@site/docs/cairo-1/06-interacting-with-starknet/02-declare.md",sourceDirName:"cairo-1/06-interacting-with-starknet",slug:"/cairo-1/interacting-with-starknet/declare",permalink:"/protostar/docs/cairo-1/interacting-with-starknet/declare",draft:!1,editUrl:"https://github.com/software-mansion/protostar/tree/master/website/docs/cairo-1/06-interacting-with-starknet/02-declare.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{},sidebar:"cairo1",previous:{title:"Invoking contracts",permalink:"/protostar/docs/cairo-1/interacting-with-starknet/invoke"},next:{title:"Deploying new contracts",permalink:"/protostar/docs/cairo-1/interacting-with-starknet/deploy"}},s={},l=[{value:"Usage example",id:"usage-example",level:2}],p={toc:l};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"declaring-new-contracts"},"Declaring new contracts"),(0,a.kt)("p",null,"Starknet provides a distinction between contract class and instance. This is similar to difference between writing the\ncode of a ",(0,a.kt)("inlineCode",{parentName:"p"},"class MyClass {}")," and creating a new instance of it ",(0,a.kt)("inlineCode",{parentName:"p"},"let myInstance = MyClass()")," in object-oriented\nprogramming languages."),(0,a.kt)("p",null,"To deploy new contract instance, you need to:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Declare a contract on the network"),(0,a.kt)("li",{parentName:"ol"},"Deploy a instance of that declared contract")),(0,a.kt)("p",null,"For detailed API description, see ",(0,a.kt)("a",{parentName:"p",href:"/protostar/docs/cli-reference#declare-cairo1"},"declare-cairo1 command reference"),"."),(0,a.kt)("h2",{id:"usage-example"},"Usage example"),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"Building a contract before running ",(0,a.kt)("inlineCode",{parentName:"p"},"declare-cairo1")," is not required. Protostar builds a contract during declaration under the hood.\nunder the hood.")),(0,a.kt)("p",null,"First make sure contract is defined in the ",(0,a.kt)("a",{parentName:"p",href:"/protostar/docs/cairo-1/protostar-toml"},(0,a.kt)("inlineCode",{parentName:"a"},"protostar.toml")),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-toml",metastring:"title=protostar.toml",title:"protostar.toml"},'# ...\n[contracts]\nmy_contract = ["src"]\n')),(0,a.kt)("p",null,"Then run:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="Example"',title:'"Example"'},"protostar declare-cairo1 my_contract \\\n  --network testnet \\\n  --account-address 0x0481Eed2e02b1ff19Fd32429801f28a59DEa630d81189E39c80F2F60139b381a \\\n  --max-fee auto \\\n  --private-key-path ./.pkey\nDeclare transaction was sent.\nClass hash: 0x038cc...\nTransaction hash: 0x3c6c...\n")),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"The declare transaction must be signed and requires paying a fee, similarly to how invoke transaction does.\nSee ",(0,a.kt)("a",{parentName:"p",href:"/protostar/docs/cairo-1/interacting-with-starknet/invoke#signing"},"signing")," for more details.")))}d.isMDXComponent=!0}}]);