"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1707],{3905:function(e,t,n){n.d(t,{Zo:function(){return _},kt:function(){return u}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},c=Object.keys(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),i=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},_=function(e){var t=i(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,c=e.originalType,s=e.parentName,_=o(e,["components","mdxType","originalType","parentName"]),p=i(n),u=r,f=p["".concat(s,".").concat(u)]||p[u]||d[u]||c;return n?a.createElement(f,l(l({ref:t},_),{},{components:n})):a.createElement(f,l({ref:t},_))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var c=n.length,l=new Array(c);l[0]=p;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var i=2;i<c;i++)l[i]=n[i];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},7640:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return c},metadata:function(){return o},toc:function(){return i}});var a=n(3117),r=(n(7294),n(3905));const c={},l="expect_call",o={unversionedId:"legacy/testing/cheatcodes/expect-call",id:"legacy/testing/cheatcodes/expect-call",title:"expect_call",description:"Allows specifying what calls to contracts' functions are expected in the code.",source:"@site/docs/legacy/07-testing/02-cheatcodes/expect-call.md",sourceDirName:"legacy/07-testing/02-cheatcodes",slug:"/legacy/testing/cheatcodes/expect-call",permalink:"/protostar/docs/legacy/testing/cheatcodes/expect-call",draft:!1,editUrl:"https://github.com/software-mansion/protostar/tree/master/website/docs/legacy/07-testing/02-cheatcodes/expect-call.md",tags:[],version:"current",frontMatter:{},sidebar:"legacy",previous:{title:"example",permalink:"/protostar/docs/legacy/testing/cheatcodes/example"},next:{title:"expect_events",permalink:"/protostar/docs/legacy/testing/cheatcodes/expect-events"}},s={},i=[],_={toc:i};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},_,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"expect_call"},(0,r.kt)("inlineCode",{parentName:"h1"},"expect_call")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def expect_call(self, contract_address: int, fn_name: str, calldata: list[int]) -> None: ...\n")),(0,r.kt)("p",null,"Allows specifying what calls to contracts' functions are expected in the code.\nIt sets an expectation for a specific call that is then checked either when the returned callable is called or at the end of the current scope."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"calldata")," is a list of arguments that are expected for a certain call. The checking mechanism goes for a strict match, which means that the order, as well as the values of each element, have to be exactly the same."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cairo",metastring:'title="Example"',title:'"Example"'},'%lang starknet\n\n@contract_interface\nnamespace MainContract {\n  func increase_balance(amount_1: felt, amount_2: felt, amount_3: felt) -> () {\n  }\n}\n\n@external\nfunc __setup__() {\n  %{\n    context.ctr_addr_a = deploy_contract("basic_contract.cairo", []).contract_address\n    context.ctr_addr_b = deploy_contract("basic_contract.cairo", []).contract_address\n  %}\n\n  return ();\n}\n\n\n@external\nfunc test_expect_call_success{syscall_ptr: felt*, range_check_ptr}() {\n  tempvar ctr_addr_a;\n  %{ ids.ctr_addr_a = context.ctr_addr_a %}\n  tempvar ctr_addr_b;\n  %{ ids.ctr_addr_b = context.ctr_addr_b %}\n\n  %{ assert_increase_balance_a_567_called = expect_call(ids.ctr_addr_a, "increase_balance", [5, 6, 7]) %}\n  %{ assert_increase_balance_b_123_called = expect_call(ids.ctr_addr_b, "increase_balance", [1, 2, 3]) %}\n\n  MainContract.increase_balance(contract_address=ctr_addr_a, amount_1=5, amount_2=6, amount_3=7);\n  %{ assert_increase_balance_a_567_called() %}\n\n  MainContract.increase_balance(contract_address=ctr_addr_b, amount_1=1, amount_2=2, amount_3=3);\n\n  return ();\n}\n\n@external\nfunc test_expect_call_fail_after_stop{syscall_ptr: felt*, range_check_ptr}() {\n  tempvar ctr_addr_a;\n  %{ ids.ctr_addr_a = context.ctr_addr_a %}\n\n  %{ assert_increase_balance_a_567_called = expect_call(ids.ctr_addr_a, "increase_balance", [5, 6, 7]) %}\n  %{ assert_increase_balance_a_567_called() %}\n\n  MainContract.increase_balance(contract_address=ctr_addr_a, amount_1=5, amount_2=6, amount_3=7);\n\n  return ();\n}\n\n@external\nfunc test_expect_call_wrong_args{syscall_ptr: felt*, range_check_ptr}() {\n  tempvar ctr_addr_a;\n  %{\n    ids.ctr_addr_a = context.ctr_addr_a\n    expect_call(ids.ctr_addr_a, "increase_balance", [1, 3, 2])\n  %}\n\n  MainContract.increase_balance(contract_address=ctr_addr_a, amount_1=1, amount_2=2, amount_3=3);\n\n  return ();\n}\n')),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"test_expect_call_wrong_args")," will fail because even though the set of expected arguments is the same as the arguments in the call, the order is different, so they ",(0,r.kt)("strong",{parentName:"p"},"do not")," strictly match."))}d.isMDXComponent=!0}}]);