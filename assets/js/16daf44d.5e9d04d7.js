"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3094],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),f=l(n),d=a,m=f["".concat(s,".").concat(d)]||f[d]||u[d]||o;return n?r.createElement(m,c(c({ref:t},p),{},{components:n})):r.createElement(m,c({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,c=new Array(o);c[0]=f;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,c[1]=i;for(var l=2;l<o;l++)c[l]=n[l];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},9391:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return c},default:function(){return u},frontMatter:function(){return o},metadata:function(){return i},toc:function(){return l}});var r=n(3117),a=(n(7294),n(3905));const o={},c="expect_revert",i={unversionedId:"legacy/testing/cheatcodes/expect-revert",id:"legacy/testing/cheatcodes/expect-revert",title:"expect_revert",description:"If a code beneath expect_revert raises a specified exception, a test will pass. If not, a test will fail.",source:"@site/docs/legacy/07-testing/02-cheatcodes/expect-revert.md",sourceDirName:"legacy/07-testing/02-cheatcodes",slug:"/legacy/testing/cheatcodes/expect-revert",permalink:"/protostar/docs/legacy/testing/cheatcodes/expect-revert",draft:!1,editUrl:"https://github.com/software-mansion/protostar/tree/master/website/docs/legacy/07-testing/02-cheatcodes/expect-revert.md",tags:[],version:"current",frontMatter:{},sidebar:"legacy",previous:{title:"expect_events",permalink:"/protostar/docs/legacy/testing/cheatcodes/expect-events"},next:{title:"given",permalink:"/protostar/docs/legacy/testing/cheatcodes/given"}},s={},l=[],p={toc:l};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"expect_revert"},(0,a.kt)("inlineCode",{parentName:"h1"},"expect_revert")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"def expect_revert(error_type: Optional[str] = None, error_message: Optional[str] = None) -> None: ...\n")),(0,a.kt)("p",null,"If a code beneath ",(0,a.kt)("inlineCode",{parentName:"p"},"expect_revert")," raises a specified exception, a test will pass. If not, a test will fail."),(0,a.kt)("admonition",{type:"warning"},(0,a.kt)("p",{parentName:"admonition"},"Protostar always stops test case execution when a revert error is raised.\nThe ",(0,a.kt)("inlineCode",{parentName:"p"},"expect_revert")," cheatcode installs an assertion matching the caught error object,\nbut it does not resume test execution in ",(0,a.kt)("inlineCode",{parentName:"p"},"try/except"),"-fashion.")),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Protostar displays an error type and a message when a test fails.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cairo",metastring:'title="This test passes despite calling an uninitialized contract."',title:'"This',test:!0,passes:!0,despite:!0,calling:!0,an:!0,uninitialized:!0,'contract."':!0},'%lang starknet\n\n@contract_interface\nnamespace BasicContract {\n    func increase_balance(amount: felt) {\n    }\n\n    func get_balance() -> (res: felt) {\n    }\n}\n\n@external\nfunc test_failing_to_call_external_contract{syscall_ptr: felt*, range_check_ptr}() {\n    alloc_locals;\n\n    %{ expect_revert("UNINITIALIZED_CONTRACT") %}\n    BasicContract.increase_balance(contract_address=21, amount=3);\n\n    return ();\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cairo",metastring:"title=\"'except_revert' checks if the last error annotation contains 'error_message'.\"",title:"\"'except_revert'",checks:!0,if:!0,the:!0,last:!0,error:!0,annotation:!0,contains:!0,"'error_message'.\"":!0},'%lang starknet\n\nfunc inverse(x) -> (res: felt) {\n    with_attr error_message("x must not be zero. Got x={x}.") {\n        return (res=1 / x);\n    }\n}\n\nfunc assert_not_equal(a, b) {\n    let diff = a - b;\n    with_attr error_message("a and b must be distinct.") {\n        inverse(diff);\n    }\n    return ();\n}\n\n@external\nfunc test_error_message{syscall_ptr: felt*, range_check_ptr}() {\n    %{ expect_revert(error_message="must be distinct") %}\n    assert_not_equal(0, 0);\n    return ();\n}\n')),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"Use ",(0,a.kt)("a",{parentName:"p",href:"https://www.cairo-lang.org/docs/how_cairo_works/scope_attributes.html?highlight=with_attr"},"scope attributes")," to annotate a code block with an informative error message.")))}u.isMDXComponent=!0}}]);