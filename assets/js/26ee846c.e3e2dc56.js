"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8472],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),m=s(n),d=o,f=m["".concat(l,".").concat(d)]||m[d]||u[d]||a;return n?r.createElement(f,i(i({ref:t},p),{},{components:n})):r.createElement(f,i({ref:t},p))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1866:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return i},default:function(){return u},frontMatter:function(){return a},metadata:function(){return c},toc:function(){return s}});var r=n(3117),o=(n(7294),n(3905));const a={sidebar_label:"Compilation"},i="Compiling a Project with Protostar",c={unversionedId:"legacy/compiling",id:"legacy/compiling",title:"Compiling a Project with Protostar",description:"Compiling Cairo 0 contracts is deprecated and will be removed in the future.",source:"@site/docs/legacy/05-compiling.md",sourceDirName:"legacy",slug:"/legacy/compiling",permalink:"/protostar/docs/legacy/compiling",draft:!1,editUrl:"https://github.com/software-mansion/protostar/tree/master/website/docs/legacy/05-compiling.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_label:"Compilation"},sidebar:"legacy",previous:{title:"Configuration file",permalink:"/protostar/docs/legacy/configuration-file"},next:{title:"Dependencies",permalink:"/protostar/docs/legacy/dependency-management"}},l={},s=[{value:"Checking cairo-lang version",id:"checking-cairo-lang-version",level:2}],p={toc:s};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"compiling-a-project-with-protostar"},"Compiling a Project with Protostar"),(0,o.kt)("admonition",{type:"warning"},(0,o.kt)("p",{parentName:"admonition"},"Compiling Cairo 0 contracts is deprecated and will be removed in the future.\nConsider migrating your contracts to ",(0,o.kt)("a",{parentName:"p",href:"/protostar/docs/cairo-1/introduction"},"Cairo 1"),".")),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Compiling Cairo 0 contracts has recently been renamed to ",(0,o.kt)("inlineCode",{parentName:"p"},"build-cairo0"),".")),(0,o.kt)("p",null,"To compile your Starknet contracts using Protostar, follow these steps:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Specify the contracts and their corresponding Cairo source files in the ",(0,o.kt)("a",{parentName:"li",href:"/docs/legacy/configuration-file"},(0,o.kt)("inlineCode",{parentName:"a"},"protostar.toml")," configuration file"),".\nEach Cairo file that contains an entrypoint function should be listed in the ",(0,o.kt)("a",{parentName:"li",href:"/docs/legacy/configuration-file#contracts"},(0,o.kt)("inlineCode",{parentName:"a"},"contracts")," section of the configuration file"),".\nAn entrypoint is a function decorated with ",(0,o.kt)("a",{parentName:"li",href:"https://starknet.io/docs/hello_starknet/constructors.html"},(0,o.kt)("inlineCode",{parentName:"a"},"@constructor")),", ",(0,o.kt)("a",{parentName:"li",href:"https://starknet.io/docs/hello_starknet/intro.html"},(0,o.kt)("inlineCode",{parentName:"a"},"@external")),", ",(0,o.kt)("a",{parentName:"li",href:"https://starknet.io/docs/hello_starknet/intro.html"},(0,o.kt)("inlineCode",{parentName:"a"},"@view")),", or ",(0,o.kt)("a",{parentName:"li",href:"https://starknet.io/docs/hello_starknet/l1l2.html?highlight=l1_handler"},(0,o.kt)("inlineCode",{parentName:"a"},"@l1_handler")),".\nIf a Cairo file is imported by a file that is already included in the contracts section, it does not need to be listed separately.\nFor example: ")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-toml",metastring:'title="protostar.toml"',title:'"protostar.toml"'},'# ...\n[contracts]\nmain = ["./src/main.cairo"]\nproxy = ["./src/proxy.cairo"]\n')),(0,o.kt)("ol",{start:2},(0,o.kt)("li",{parentName:"ol"},"Run the ",(0,o.kt)("a",{parentName:"li",href:"/docs/cli-reference#build-cairo0"},(0,o.kt)("inlineCode",{parentName:"a"},"protostar build-cairo0"))," command.\nThis will generate the compiled contracts in the ",(0,o.kt)("inlineCode",{parentName:"li"},"build")," directory by default.\nYou can specify a custom output directory using the ",(0,o.kt)("a",{parentName:"li",href:"/docs/cli-reference#--compiled-contracts-dir-pathbuild-1"},(0,o.kt)("inlineCode",{parentName:"a"},"compiled-contracts-dir"))," argument.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"$ protostar build-cairo0 --compiled-contracts-dir out\n")),(0,o.kt)("p",null,"This will create the following files in the ",(0,o.kt)("inlineCode",{parentName:"p"},"out")," directory:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"protostar-project\n\u251c\u2500\u2500 src\n\u2502   \u251c\u2500\u2500 main.cairo\n\u2502   \u2514\u2500\u2500 proxy.cairo\n\u251c\u2500\u2500 out\n\u2502   \u251c\u2500\u2500 main.json\n\u2502   \u251c\u2500\u2500 main_abi.json\n\u2502   \u251c\u2500\u2500 proxy.json\n\u2502   \u2514\u2500\u2500 proxy_abi.json\n\u2514\u2500\u2500 protostar.toml\n")),(0,o.kt)("h2",{id:"checking-cairo-lang-version"},"Checking cairo-lang version"),(0,o.kt)("p",null,"Protostar ships with its own version of cairo-lang and formatter, so you don't need to set up the environment separately. You can check the version of Cairo-lang that Protostar uses to compile your project by running ",(0,o.kt)("inlineCode",{parentName:"p"},"protostar -v"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"$ protostar -v\nProtostar version: X.Y.Z\nCairo-lang version: A.B.C\nCairo 1 compiler version: J.K.L\n")))}u.isMDXComponent=!0}}]);