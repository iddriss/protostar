"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3024],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return f}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},c=Object.keys(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=n.createContext({}),s=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,c=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(r),f=a,m=d["".concat(i,".").concat(f)]||d[f]||u[f]||c;return r?n.createElement(m,o(o({ref:t},p),{},{components:r})):n.createElement(m,o({ref:t},p))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var c=r.length,o=new Array(c);o[0]=d;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var s=2;s<c;s++)o[s]=r[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},7908:function(e,t,r){r.r(t),r.d(t,{assets:function(){return i},contentTitle:function(){return o},default:function(){return u},frontMatter:function(){return c},metadata:function(){return l},toc:function(){return s}});var n=r(3117),a=(r(7294),r(3905));const c={},o="call",l={unversionedId:"cairo-1/testing/cheatcodes-reference/call",id:"cairo-1/testing/cheatcodes-reference/call",title:"call",description:"Calls a deployed contract. Unlike invoke, it does not mutate the blockchain state.",source:"@site/docs/cairo-1/05-testing/cheatcodes-reference/call.md",sourceDirName:"cairo-1/05-testing/cheatcodes-reference",slug:"/cairo-1/testing/cheatcodes-reference/call",permalink:"/protostar/docs/cairo-1/testing/cheatcodes-reference/call",draft:!1,editUrl:"https://github.com/software-mansion/protostar/tree/master/website/docs/cairo-1/05-testing/cheatcodes-reference/call.md",tags:[],version:"current",frontMatter:{},sidebar:"cairo1",previous:{title:"Cheatcodes reference",permalink:"/protostar/docs/cairo-1/testing/cheatcodes-reference/"},next:{title:"declare_cairo0",permalink:"/protostar/docs/cairo-1/testing/cheatcodes-reference/declare-cairo0"}},i={},s=[],p={toc:s};function u(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"call"},(0,a.kt)("inlineCode",{parentName:"h1"},"call")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cairo"},"extern fn call(contract: felt252, function_name: felt252, calldata: @Array::<felt252>) -> Result::<(Array::<felt252>), RevertedTransaction> nopanic;\n")),(0,a.kt)("p",null,"Calls a ",(0,a.kt)("a",{parentName:"p",href:"/protostar/docs/cairo-1/testing/cheatcodes-reference/deploy"},"deployed")," contract. Unlike ",(0,a.kt)("a",{parentName:"p",href:"/protostar/docs/cairo-1/testing/cheatcodes-reference/invoke"},"invoke"),", it ",(0,a.kt)("strong",{parentName:"p"},"does not")," mutate the blockchain state."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"contract")," - deployed contract address"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"function_name")," - the name of the function you wish to call, this is the ",(0,a.kt)("a",{parentName:"li",href:"https://www.cairo-lang.org/docs/how_cairo_works/consts.html#short-string-literals"},"Cairo short string")," which can be at most 31-characters long."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"calldata")," - arguments to the target function")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cairo",metastring:'title="Example"',title:'"Example"'},"use array::ArrayTrait;\nuse result::ResultTrait;\n\n#[test]\nfn test_call() {\n    let mut calldata = ArrayTrait::new();\n    calldata.append(3);\n    calldata.append(2);\n    calldata.append(5);\n    let return_data2 = call(deployed_contract_address, 'foo', @calldata).unwrap();\n    assert(*return_data2.at(0_u32) == 25, 'check call result');\n}\n")),(0,a.kt)("p",null,"You can find more examples ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/software-mansion/protostar/blob/18959214d46409be8bedd92cc6427c1945b1bcc8/tests/integration/cairo1_hint_locals/call/call_test.cairo"},"here"),"."))}u.isMDXComponent=!0}}]);