"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8436],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),p=s(n),m=a,f=p["".concat(l,".").concat(m)]||p[m]||u[m]||i;return n?r.createElement(f,o(o({ref:t},d),{},{components:n})):r.createElement(f,o({ref:t},d))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=p;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var s=2;s<i;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},2991:function(e,t,n){n.d(t,{Z:function(){return k}});var r=n(7294),a=n(6010),i=n(2802),o=n(9960),c=n(3919),l=n(5999),s="cardContainer_fWXF",d="cardTitle_rnsV",u="cardDescription_PWke";function p(e){let{href:t,children:n}=e;return r.createElement(o.Z,{href:t,className:(0,a.Z)("card padding--lg",s)},n)}function m(e){let{href:t,icon:n,title:i,description:o}=e;return r.createElement(p,{href:t},r.createElement("h2",{className:(0,a.Z)("text--truncate",d),title:i},n," ",i),o&&r.createElement("p",{className:(0,a.Z)("text--truncate",u),title:o},o))}function f(e){let{item:t}=e;const n=(0,i.Wl)(t);return n?r.createElement(m,{href:n,icon:"\ud83d\uddc3\ufe0f",title:t.label,description:(0,l.I)({message:"{count} items",id:"theme.docs.DocCard.categoryDescription",description:"The default description for a category card in the generated index about how many items this category includes"},{count:t.items.length})}):null}function h(e){let{item:t}=e;const n=(0,c.Z)(t.href)?"\ud83d\udcc4\ufe0f":"\ud83d\udd17",a=(0,i.xz)(t.docId??void 0);return r.createElement(m,{href:t.href,icon:n,title:t.label,description:null==a?void 0:a.description})}function g(e){let{item:t}=e;switch(t.type){case"link":return r.createElement(h,{item:t});case"category":return r.createElement(f,{item:t});default:throw new Error(`unknown item type ${JSON.stringify(t)}`)}}function y(e){let{className:t}=e;const n=(0,i.jA)();return r.createElement(k,{items:n.items,className:t})}function k(e){const{items:t,className:n}=e;if(!t)return r.createElement(y,e);const o=(0,i.MN)(t);return r.createElement("section",{className:(0,a.Z)("row",n)},o.map(((e,t)=>r.createElement("article",{key:t,className:"col col--6 margin-bottom--lg"},r.createElement(g,{item:e})))))}},1082:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return c},metadata:function(){return s},toc:function(){return u}});var r=n(3117),a=(n(7294),n(3905)),i=n(2991),o=n(2802);const c={},l="Cheatcodes reference",s={unversionedId:"cairo-1/testing/cheatcodes-reference/README",id:"cairo-1/testing/cheatcodes-reference/README",title:"Cheatcodes reference",description:"Some tests require specific setup beyond what is possible using standard flow. Protostar exposes",source:"@site/docs/cairo-1/05-testing/cheatcodes-reference/README.md",sourceDirName:"cairo-1/05-testing/cheatcodes-reference",slug:"/cairo-1/testing/cheatcodes-reference/",permalink:"/protostar/docs/cairo-1/testing/cheatcodes-reference/",draft:!1,editUrl:"https://github.com/software-mansion/protostar/tree/master/website/docs/cairo-1/05-testing/cheatcodes-reference/README.md",tags:[],version:"current",frontMatter:{},sidebar:"cairo1",previous:{title:"End-to-end tests",permalink:"/protostar/docs/cairo-1/testing/e2e"},next:{title:"call",permalink:"/protostar/docs/cairo-1/testing/cheatcodes-reference/call"}},d={},u=[{value:"Error handling in cheatcodes",id:"error-handling-in-cheatcodes",level:2},{value:"Failing test on cheatcode error",id:"failing-test-on-cheatcode-error",level:3},{value:"<code>RevertedTransaction</code>",id:"revertedtransaction",level:3},{value:"Available cheatcodes",id:"available-cheatcodes",level:2}],p={toc:u};function m(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"cheatcodes-reference"},"Cheatcodes reference"),(0,a.kt)("p",null,"Some tests require specific setup beyond what is possible using standard flow. Protostar exposes\nadditional functions called cheatcodes that let you do modify the state beyond what is normally possible."),(0,a.kt)("p",null,"Cheatcodes do not require any specific imports or ",(0,a.kt)("inlineCode",{parentName:"p"},"use")," declarations."),(0,a.kt)("h2",{id:"error-handling-in-cheatcodes"},"Error handling in cheatcodes"),(0,a.kt)("p",null,"All cheatcodes return a ",(0,a.kt)("inlineCode",{parentName:"p"},"Result")," enum:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cairo",metastring:'title="Result"',title:'"Result"'},"enum Result<T, felt252> {\n    Ok: T,\n    Err: E,\n}\n")),(0,a.kt)("p",null,"On successful cheatcode execution, a positive result is returned (",(0,a.kt)("inlineCode",{parentName:"p"},"OK"),") - its exact type depends on the cheatcode."),(0,a.kt)("p",null,"Depending on cheatcode the type of ",(0,a.kt)("inlineCode",{parentName:"p"},"Err")," may also vary."),(0,a.kt)("h3",{id:"failing-test-on-cheatcode-error"},"Failing test on cheatcode error"),(0,a.kt)("p",null,"The simplest handling of ",(0,a.kt)("inlineCode",{parentName:"p"},"Result")," is to ",(0,a.kt)("inlineCode",{parentName:"p"},"unwrap()")," them. It either returns a cheatcode success value or causes the test\nto\nfail entirely:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cairo",metastring:'title="Simple handling"',title:'"Simple','handling"':!0},"use result::ResultTrait;\n\nlet prepared_contract = prepare(class_hash, @calldata).unwrap();\n")),(0,a.kt)("h3",{id:"revertedtransaction"},(0,a.kt)("inlineCode",{parentName:"h3"},"RevertedTransaction")),(0,a.kt)("p",null,"Cheatcodes ",(0,a.kt)("inlineCode",{parentName:"p"},"invoke"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"call"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"deploy"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"deploy_contract")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"deploy_contract_cairo0")," and return an ",(0,a.kt)("inlineCode",{parentName:"p"},"Err")," of\ntype ",(0,a.kt)("inlineCode",{parentName:"p"},"RevertedTransaction")," in case of failure."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cairo"},"struct RevertedTransaction {\n    panic_data: Array::<felt252>, \n}\n")),(0,a.kt)("p",null,"It also implements a trait:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cairo"},"trait RevertedTransactionTrait {\n    fn first(self: @RevertedTransaction) -> felt252;\n}\n")),(0,a.kt)("p",null,"An example handling of ",(0,a.kt)("inlineCode",{parentName:"p"},"RevertedTransaction")," may look like this"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cairo",metastring:'title="Match handling"',title:'"Match','handling"':!0},"match invoke(deployed_contract_address, 'panic_with', @panic_data) {\n    Result::Ok(x) => assert(false, 'Shouldnt have succeeded'),\n    Result::Err(x) => {\n        assert(x.first() == 'error', 'first datum doesnt match');\n        assert(*x.panic_data.at(1_u32) == 'data', 'second datum doesnt match');\n    }\n}\n")),(0,a.kt)("h2",{id:"available-cheatcodes"},"Available cheatcodes"),(0,a.kt)(i.Z,{items:(0,o.jA)().items,mdxType:"DocCardList"}))}m.isMDXComponent=!0}}]);