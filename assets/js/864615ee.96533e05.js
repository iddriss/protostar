"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2278],{3905:function(t,e,r){r.d(e,{Zo:function(){return p},kt:function(){return f}});var n=r(7294);function a(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function o(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function i(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?o(Object(r),!0).forEach((function(e){a(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function c(t,e){if(null==t)return{};var r,n,a=function(t,e){if(null==t)return{};var r,n,a={},o=Object.keys(t);for(n=0;n<o.length;n++)r=o[n],e.indexOf(r)>=0||(a[r]=t[r]);return a}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(n=0;n<o.length;n++)r=o[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(a[r]=t[r])}return a}var s=n.createContext({}),l=function(t){var e=n.useContext(s),r=e;return t&&(r="function"==typeof t?t(e):i(i({},e),t)),r},p=function(t){var e=l(t.components);return n.createElement(s.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},d=n.forwardRef((function(t,e){var r=t.components,a=t.mdxType,o=t.originalType,s=t.parentName,p=c(t,["components","mdxType","originalType","parentName"]),d=l(r),f=a,m=d["".concat(s,".").concat(f)]||d[f]||u[f]||o;return r?n.createElement(m,i(i({ref:e},p),{},{components:r})):n.createElement(m,i({ref:e},p))}));function f(t,e){var r=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var o=r.length,i=new Array(o);i[0]=d;var c={};for(var s in e)hasOwnProperty.call(e,s)&&(c[s]=e[s]);c.originalType=t,c.mdxType="string"==typeof t?t:a,i[1]=c;for(var l=2;l<o;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},8016:function(t,e,r){r.r(e),r.d(e,{assets:function(){return s},contentTitle:function(){return i},default:function(){return u},frontMatter:function(){return o},metadata:function(){return c},toc:function(){return l}});var n=r(3117),a=(r(7294),r(3905));const o={},i="Deploying new contracts",c={unversionedId:"tutorials/interacting-with-starknet/deploy",id:"tutorials/interacting-with-starknet/deploy",title:"Deploying new contracts",description:"Overview",source:"@site/docs/tutorials/08-interacting-with-starknet/04-deploy.md",sourceDirName:"tutorials/08-interacting-with-starknet",slug:"/tutorials/interacting-with-starknet/deploy",permalink:"/protostar/docs/tutorials/interacting-with-starknet/deploy",draft:!1,editUrl:"https://github.com/software-mansion/protostar/tree/master/website/docs/tutorials/08-interacting-with-starknet/04-deploy.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{},sidebar:"tutorials",previous:{title:"Declaring new contracts",permalink:"/protostar/docs/tutorials/interacting-with-starknet/declare"},next:{title:"Creating account",permalink:"/protostar/docs/tutorials/interacting-with-starknet/deploy-account"}},s={},l=[{value:"Overview",id:"overview",level:2},{value:"Usage example",id:"usage-example",level:2}],p={toc:l};function u(t){let{components:e,...r}=t;return(0,a.kt)("wrapper",(0,n.Z)({},p,r,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"deploying-new-contracts"},"Deploying new contracts"),(0,a.kt)("h2",{id:"overview"},"Overview"),(0,a.kt)("p",null,"Protostar supports deploying smart contracts to a given network with the ",(0,a.kt)("inlineCode",{parentName:"p"},"protostar deploy")," command."),(0,a.kt)("p",null,"It works by invoking a ",(0,a.kt)("a",{parentName:"p",href:"https://community.starknet.io/t/universal-deployer-contract-proposal/1864"},"Universal Deployer Contract"),",\nwhich deploys the contract with the given class hash and constructor arguments."),(0,a.kt)("p",null,"The basic inputs needed for this command are:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Class hash of the declared contract class, that you want to deploy"),(0,a.kt)("li",{parentName:"ul"},"Network you want to target (i.e. its name or gateway URL)")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/protostar/docs/cli-reference#deploy"},"Read the CLI reference for the deploy command")," to learn more about all supported arguments."),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"Although this command does not require ",(0,a.kt)("a",{parentName:"p",href:"/protostar/docs/tutorials/interacting-with-starknet/signing"},"signing the transaction")," right now, it is strongly encouraged to do so as it will be required in the future. ")),(0,a.kt)("h2",{id:"usage-example"},"Usage example"),(0,a.kt)("p",null,"After ",(0,a.kt)("a",{parentName:"p",href:"/protostar/docs/tutorials/interacting-with-starknet/declare"},"declaring your contract"),", you can deploy the contract in the following way."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-console",metastring:'title="protostar deploy 0xdeadbeef --network testnet"',title:'"protostar',deploy:!0,"0xdeadbeef":!0,"--network":!0,'testnet"':!0},"[INFO] Invoke transaction was sent to the Universal Deployer Contract.\nContract address: 0x06a5ea9e42c921bd58e24b8da9d1fc91a488df0700b173f1c6bb0e453f68afec\nTransaction hash: 0x1cbba90ba0d1fbfba09b1f7a0f987134dd9a02a845ca89244b3272374d37ede\n\nhttps://goerli.voyager.online/contract/0x06a5ea9e42c921bd58e24b8da9d1fc91a488df0700b173f1c6bb0e453f68afec\n")))}u.isMDXComponent=!0}}]);